-- -------------------------------------------------------------
-- 
-- File Name: D:\Matlab_Vhd\smartCart\OTLADKA\hdlsrc\smartCart5_1work\head_ip_axi_lite.vhd
-- Created: 2016-07-28 11:39:04
-- 
-- Generated by MATLAB 9.0 and HDL Coder 3.8
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: head_ip_axi_lite
-- Source Path: head_ip/head_ip_axi_lite
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY head_ip_axi_lite IS
  PORT( reset                             :   IN    std_logic;
        AXI4_Lite_ACLK                    :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARESETN                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_AWADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_AWVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_WDATA                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_WSTRB                   :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_Lite_WVALID                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_BREADY                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_ARVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_RREADY                  :   IN    std_logic;  -- ufix1
        read_Out1                         :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        read_Out2                         :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        read_Out3                         :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        read_Out4                         :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        read_Out5                         :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        read_Out6                         :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        read_Out7                         :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        read_Out8                         :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        read_status                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_AWREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_WREADY                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_BRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_BVALID                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_ARREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_RDATA                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_RRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_RVALID                  :   OUT   std_logic;  -- ufix1
        write_axi_enable                  :   OUT   std_logic;  -- ufix1
        write_comanda                     :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_1                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_2                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_3                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_4                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_5                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_6                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_7                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_8                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_9                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_10                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_11                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_12                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_13                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_14                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_15                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_16                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_17                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_18                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_19                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_20                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_21                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_22                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_23                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_24                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_25                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_26                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_27                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_28                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_29                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_30                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_31                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_32                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_33                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_34                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_35                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_36                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_37                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_38                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_39                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_40                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_41                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_42                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_43                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_44                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_45                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_46                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_47                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_48                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_49                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_50                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_51                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_52                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_53                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_54                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_55                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_56                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_57                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_58                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_59                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_60                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_61                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_62                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_63                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_data_in_64                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_Time_transition             :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_Time_pause                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_Time_reciv                  :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_Time_transmit               :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        write_Time_interval               :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        reset_internal                    :   OUT   std_logic  -- ufix1
        );
END head_ip_axi_lite;


ARCHITECTURE rtl OF head_ip_axi_lite IS

  -- Component Declarations
  COMPONENT head_ip_addr_decoder
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;
          data_write                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          addr_sel                        :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14
          wr_enb                          :   IN    std_logic;  -- ufix1
          rd_enb                          :   IN    std_logic;  -- ufix1
          read_Out1                       :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          read_Out2                       :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          read_Out3                       :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          read_Out4                       :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          read_Out5                       :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          read_Out6                       :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          read_Out7                       :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          read_Out8                       :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          read_status                     :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_read                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_axi_enable                :   OUT   std_logic;  -- ufix1
          write_comanda                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_1                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_2                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_3                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_4                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_5                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_6                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_7                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_8                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_9                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_10                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_11                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_12                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_13                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_14                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_15                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_16                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_17                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_18                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_19                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_20                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_21                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_22                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_23                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_24                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_25                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_26                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_27                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_28                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_29                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_30                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_31                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_32                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_33                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_34                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_35                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_36                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_37                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_38                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_39                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_40                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_41                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_42                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_43                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_44                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_45                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_46                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_47                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_48                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_49                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_50                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_51                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_52                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_53                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_54                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_55                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_56                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_57                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_58                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_59                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_60                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_61                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_62                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_63                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_64                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Time_transition           :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Time_pause                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Time_reciv                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Time_transmit             :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Time_interval             :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
          );
  END COMPONENT;

  COMPONENT head_ip_axi_lite_module
    PORT( clk                             :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARESETN               :   IN    std_logic;  -- ufix1
          AXI4_Lite_AWADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_AWVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_WDATA                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_WSTRB                 :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_Lite_WVALID                :   IN    std_logic;  -- ufix1
          AXI4_Lite_BREADY                :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_ARVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_RREADY                :   IN    std_logic;  -- ufix1
          data_read                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_AWREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_WREADY                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_BRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_BVALID                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_ARREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_RDATA                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_RRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_RVALID                :   OUT   std_logic;  -- ufix1
          data_write                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          addr_sel                        :   OUT   std_logic_vector(13 DOWNTO 0);  -- ufix14
          wr_enb                          :   OUT   std_logic;  -- ufix1
          rd_enb                          :   OUT   std_logic;  -- ufix1
          reset_internal                  :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : head_ip_addr_decoder
    USE ENTITY work.head_ip_addr_decoder(rtl);

  FOR ALL : head_ip_axi_lite_module
    USE ENTITY work.head_ip_axi_lite_module(rtl);

  -- Signals
  SIGNAL top_data_write                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL top_addr_sel                     : std_logic_vector(13 DOWNTO 0);  -- ufix14
  SIGNAL top_wr_enb                       : std_logic;  -- ufix1
  SIGNAL top_rd_enb                       : std_logic;  -- ufix1
  SIGNAL top_data_read                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_comanda_tmp                : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_1_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_2_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_3_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_4_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_5_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_6_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_7_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_8_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_9_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_10_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_11_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_12_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_13_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_14_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_15_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_16_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_17_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_18_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_19_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_20_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_21_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_22_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_23_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_24_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_25_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_26_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_27_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_28_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_29_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_30_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_31_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_32_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_33_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_34_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_35_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_36_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_37_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_38_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_39_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_40_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_41_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_42_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_43_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_44_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_45_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_46_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_47_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_48_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_49_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_50_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_51_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_52_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_53_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_54_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_55_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_56_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_57_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_58_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_59_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_60_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_61_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_62_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_63_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_64_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Time_transition_tmp        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Time_pause_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Time_reciv_tmp             : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Time_transmit_tmp          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Time_interval_tmp          : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_BRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL AXI4_Lite_RDATA_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_RRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL top_reset_internal               : std_logic;  -- ufix1

BEGIN
  u_head_ip_addr_decoder_inst : head_ip_addr_decoder
    PORT MAP( clk => AXI4_Lite_ACLK,  -- ufix1
              reset => reset,
              data_write => top_data_write,  -- ufix32
              addr_sel => top_addr_sel,  -- ufix14
              wr_enb => top_wr_enb,  -- ufix1
              rd_enb => top_rd_enb,  -- ufix1
              read_Out1 => read_Out1,  -- ufix8
              read_Out2 => read_Out2,  -- ufix8
              read_Out3 => read_Out3,  -- ufix8
              read_Out4 => read_Out4,  -- ufix8
              read_Out5 => read_Out5,  -- ufix8
              read_Out6 => read_Out6,  -- ufix8
              read_Out7 => read_Out7,  -- ufix8
              read_Out8 => read_Out8,  -- ufix8
              read_status => read_status,  -- ufix32
              data_read => top_data_read,  -- ufix32
              write_axi_enable => write_axi_enable,  -- ufix1
              write_comanda => write_comanda_tmp,  -- ufix32
              write_data_in_1 => write_data_in_1_tmp,  -- ufix32
              write_data_in_2 => write_data_in_2_tmp,  -- ufix32
              write_data_in_3 => write_data_in_3_tmp,  -- ufix32
              write_data_in_4 => write_data_in_4_tmp,  -- ufix32
              write_data_in_5 => write_data_in_5_tmp,  -- ufix32
              write_data_in_6 => write_data_in_6_tmp,  -- ufix32
              write_data_in_7 => write_data_in_7_tmp,  -- ufix32
              write_data_in_8 => write_data_in_8_tmp,  -- ufix32
              write_data_in_9 => write_data_in_9_tmp,  -- ufix32
              write_data_in_10 => write_data_in_10_tmp,  -- ufix32
              write_data_in_11 => write_data_in_11_tmp,  -- ufix32
              write_data_in_12 => write_data_in_12_tmp,  -- ufix32
              write_data_in_13 => write_data_in_13_tmp,  -- ufix32
              write_data_in_14 => write_data_in_14_tmp,  -- ufix32
              write_data_in_15 => write_data_in_15_tmp,  -- ufix32
              write_data_in_16 => write_data_in_16_tmp,  -- ufix32
              write_data_in_17 => write_data_in_17_tmp,  -- ufix32
              write_data_in_18 => write_data_in_18_tmp,  -- ufix32
              write_data_in_19 => write_data_in_19_tmp,  -- ufix32
              write_data_in_20 => write_data_in_20_tmp,  -- ufix32
              write_data_in_21 => write_data_in_21_tmp,  -- ufix32
              write_data_in_22 => write_data_in_22_tmp,  -- ufix32
              write_data_in_23 => write_data_in_23_tmp,  -- ufix32
              write_data_in_24 => write_data_in_24_tmp,  -- ufix32
              write_data_in_25 => write_data_in_25_tmp,  -- ufix32
              write_data_in_26 => write_data_in_26_tmp,  -- ufix32
              write_data_in_27 => write_data_in_27_tmp,  -- ufix32
              write_data_in_28 => write_data_in_28_tmp,  -- ufix32
              write_data_in_29 => write_data_in_29_tmp,  -- ufix32
              write_data_in_30 => write_data_in_30_tmp,  -- ufix32
              write_data_in_31 => write_data_in_31_tmp,  -- ufix32
              write_data_in_32 => write_data_in_32_tmp,  -- ufix32
              write_data_in_33 => write_data_in_33_tmp,  -- ufix32
              write_data_in_34 => write_data_in_34_tmp,  -- ufix32
              write_data_in_35 => write_data_in_35_tmp,  -- ufix32
              write_data_in_36 => write_data_in_36_tmp,  -- ufix32
              write_data_in_37 => write_data_in_37_tmp,  -- ufix32
              write_data_in_38 => write_data_in_38_tmp,  -- ufix32
              write_data_in_39 => write_data_in_39_tmp,  -- ufix32
              write_data_in_40 => write_data_in_40_tmp,  -- ufix32
              write_data_in_41 => write_data_in_41_tmp,  -- ufix32
              write_data_in_42 => write_data_in_42_tmp,  -- ufix32
              write_data_in_43 => write_data_in_43_tmp,  -- ufix32
              write_data_in_44 => write_data_in_44_tmp,  -- ufix32
              write_data_in_45 => write_data_in_45_tmp,  -- ufix32
              write_data_in_46 => write_data_in_46_tmp,  -- ufix32
              write_data_in_47 => write_data_in_47_tmp,  -- ufix32
              write_data_in_48 => write_data_in_48_tmp,  -- ufix32
              write_data_in_49 => write_data_in_49_tmp,  -- ufix32
              write_data_in_50 => write_data_in_50_tmp,  -- ufix32
              write_data_in_51 => write_data_in_51_tmp,  -- ufix32
              write_data_in_52 => write_data_in_52_tmp,  -- ufix32
              write_data_in_53 => write_data_in_53_tmp,  -- ufix32
              write_data_in_54 => write_data_in_54_tmp,  -- ufix32
              write_data_in_55 => write_data_in_55_tmp,  -- ufix32
              write_data_in_56 => write_data_in_56_tmp,  -- ufix32
              write_data_in_57 => write_data_in_57_tmp,  -- ufix32
              write_data_in_58 => write_data_in_58_tmp,  -- ufix32
              write_data_in_59 => write_data_in_59_tmp,  -- ufix32
              write_data_in_60 => write_data_in_60_tmp,  -- ufix32
              write_data_in_61 => write_data_in_61_tmp,  -- ufix32
              write_data_in_62 => write_data_in_62_tmp,  -- ufix32
              write_data_in_63 => write_data_in_63_tmp,  -- ufix32
              write_data_in_64 => write_data_in_64_tmp,  -- ufix32
              write_Time_transition => write_Time_transition_tmp,  -- ufix32
              write_Time_pause => write_Time_pause_tmp,  -- ufix32
              write_Time_reciv => write_Time_reciv_tmp,  -- ufix32
              write_Time_transmit => write_Time_transmit_tmp,  -- ufix32
              write_Time_interval => write_Time_interval_tmp  -- ufix32
              );

  u_head_ip_axi_lite_module_inst : head_ip_axi_lite_module
    PORT MAP( clk => AXI4_Lite_ACLK,  -- ufix1
              AXI4_Lite_ARESETN => AXI4_Lite_ARESETN,  -- ufix1
              AXI4_Lite_AWADDR => AXI4_Lite_AWADDR,  -- ufix16
              AXI4_Lite_AWVALID => AXI4_Lite_AWVALID,  -- ufix1
              AXI4_Lite_WDATA => AXI4_Lite_WDATA,  -- ufix32
              AXI4_Lite_WSTRB => AXI4_Lite_WSTRB,  -- ufix4
              AXI4_Lite_WVALID => AXI4_Lite_WVALID,  -- ufix1
              AXI4_Lite_BREADY => AXI4_Lite_BREADY,  -- ufix1
              AXI4_Lite_ARADDR => AXI4_Lite_ARADDR,  -- ufix16
              AXI4_Lite_ARVALID => AXI4_Lite_ARVALID,  -- ufix1
              AXI4_Lite_RREADY => AXI4_Lite_RREADY,  -- ufix1
              data_read => top_data_read,  -- ufix32
              AXI4_Lite_AWREADY => AXI4_Lite_AWREADY,  -- ufix1
              AXI4_Lite_WREADY => AXI4_Lite_WREADY,  -- ufix1
              AXI4_Lite_BRESP => AXI4_Lite_BRESP_tmp,  -- ufix2
              AXI4_Lite_BVALID => AXI4_Lite_BVALID,  -- ufix1
              AXI4_Lite_ARREADY => AXI4_Lite_ARREADY,  -- ufix1
              AXI4_Lite_RDATA => AXI4_Lite_RDATA_tmp,  -- ufix32
              AXI4_Lite_RRESP => AXI4_Lite_RRESP_tmp,  -- ufix2
              AXI4_Lite_RVALID => AXI4_Lite_RVALID,  -- ufix1
              data_write => top_data_write,  -- ufix32
              addr_sel => top_addr_sel,  -- ufix14
              wr_enb => top_wr_enb,  -- ufix1
              rd_enb => top_rd_enb,  -- ufix1
              reset_internal => top_reset_internal  -- ufix1
              );

  reset_internal <= top_reset_internal;

  AXI4_Lite_BRESP <= AXI4_Lite_BRESP_tmp;

  AXI4_Lite_RDATA <= AXI4_Lite_RDATA_tmp;

  AXI4_Lite_RRESP <= AXI4_Lite_RRESP_tmp;

  write_comanda <= write_comanda_tmp;

  write_data_in_1 <= write_data_in_1_tmp;

  write_data_in_2 <= write_data_in_2_tmp;

  write_data_in_3 <= write_data_in_3_tmp;

  write_data_in_4 <= write_data_in_4_tmp;

  write_data_in_5 <= write_data_in_5_tmp;

  write_data_in_6 <= write_data_in_6_tmp;

  write_data_in_7 <= write_data_in_7_tmp;

  write_data_in_8 <= write_data_in_8_tmp;

  write_data_in_9 <= write_data_in_9_tmp;

  write_data_in_10 <= write_data_in_10_tmp;

  write_data_in_11 <= write_data_in_11_tmp;

  write_data_in_12 <= write_data_in_12_tmp;

  write_data_in_13 <= write_data_in_13_tmp;

  write_data_in_14 <= write_data_in_14_tmp;

  write_data_in_15 <= write_data_in_15_tmp;

  write_data_in_16 <= write_data_in_16_tmp;

  write_data_in_17 <= write_data_in_17_tmp;

  write_data_in_18 <= write_data_in_18_tmp;

  write_data_in_19 <= write_data_in_19_tmp;

  write_data_in_20 <= write_data_in_20_tmp;

  write_data_in_21 <= write_data_in_21_tmp;

  write_data_in_22 <= write_data_in_22_tmp;

  write_data_in_23 <= write_data_in_23_tmp;

  write_data_in_24 <= write_data_in_24_tmp;

  write_data_in_25 <= write_data_in_25_tmp;

  write_data_in_26 <= write_data_in_26_tmp;

  write_data_in_27 <= write_data_in_27_tmp;

  write_data_in_28 <= write_data_in_28_tmp;

  write_data_in_29 <= write_data_in_29_tmp;

  write_data_in_30 <= write_data_in_30_tmp;

  write_data_in_31 <= write_data_in_31_tmp;

  write_data_in_32 <= write_data_in_32_tmp;

  write_data_in_33 <= write_data_in_33_tmp;

  write_data_in_34 <= write_data_in_34_tmp;

  write_data_in_35 <= write_data_in_35_tmp;

  write_data_in_36 <= write_data_in_36_tmp;

  write_data_in_37 <= write_data_in_37_tmp;

  write_data_in_38 <= write_data_in_38_tmp;

  write_data_in_39 <= write_data_in_39_tmp;

  write_data_in_40 <= write_data_in_40_tmp;

  write_data_in_41 <= write_data_in_41_tmp;

  write_data_in_42 <= write_data_in_42_tmp;

  write_data_in_43 <= write_data_in_43_tmp;

  write_data_in_44 <= write_data_in_44_tmp;

  write_data_in_45 <= write_data_in_45_tmp;

  write_data_in_46 <= write_data_in_46_tmp;

  write_data_in_47 <= write_data_in_47_tmp;

  write_data_in_48 <= write_data_in_48_tmp;

  write_data_in_49 <= write_data_in_49_tmp;

  write_data_in_50 <= write_data_in_50_tmp;

  write_data_in_51 <= write_data_in_51_tmp;

  write_data_in_52 <= write_data_in_52_tmp;

  write_data_in_53 <= write_data_in_53_tmp;

  write_data_in_54 <= write_data_in_54_tmp;

  write_data_in_55 <= write_data_in_55_tmp;

  write_data_in_56 <= write_data_in_56_tmp;

  write_data_in_57 <= write_data_in_57_tmp;

  write_data_in_58 <= write_data_in_58_tmp;

  write_data_in_59 <= write_data_in_59_tmp;

  write_data_in_60 <= write_data_in_60_tmp;

  write_data_in_61 <= write_data_in_61_tmp;

  write_data_in_62 <= write_data_in_62_tmp;

  write_data_in_63 <= write_data_in_63_tmp;

  write_data_in_64 <= write_data_in_64_tmp;

  write_Time_transition <= write_Time_transition_tmp;

  write_Time_pause <= write_Time_pause_tmp;

  write_Time_reciv <= write_Time_reciv_tmp;

  write_Time_transmit <= write_Time_transmit_tmp;

  write_Time_interval <= write_Time_interval_tmp;

END rtl;

