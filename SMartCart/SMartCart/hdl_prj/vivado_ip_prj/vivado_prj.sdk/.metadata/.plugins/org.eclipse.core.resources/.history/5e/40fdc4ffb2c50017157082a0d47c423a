/*
 * smartCard.c
 *
 *  Created on: 14 сент. 2016 г.
 *      Author: Admin
 */

#include "smartCard.h"



unsigned intcial(char number_cart_rider)
{

	int statusReg;
	u32 address;
	if (number_cart_rider==0)
	{
		address=baseaddress;
	}
	else
	{
		address=baseaddress_smoll_card;
	}

	ProgSmartCart pProgSmartCart;
	ProgSmartCart_1 pProgSmartCart_1;
	statusReg=ScuGicInterrupt_Init(0,&pProgSmartCart,&pProgSmartCart_1);
	clean_cInterfaceSmartcard(&cinterfacesmartcard);// обнуление структуры cInterfaceSmartcard
	Xil_Out32(address+0x4,0x1);// вкл линию io на приём
	Xil_Out32(address+0x100,0x4);// вкл ip ядро
	Xil_Out32(address+0x228,250000000);// время обноружения конца передачи 1 сек, 1 ед = 1/500000000 сек
	Xil_Out32(address+0x230,2604);// длительность половины бита данных, вычисляется как, 3,57e6/((Fi/di)*2)
	Xil_Out32(address+0x22C, 5208);// длительность бита данных, вычисляется как, 3,57e6/((Fi/di))
	Xil_Out32(address+0x234,5208*2-100);//длительность меж байтной паузы  данных, вычисляется как, (2*3,57e6)/((Fi/di)-100)
	Xil_Out32(address+0x204,130);// длительность переходного процесса 1 ед = 1/500000000 сек
	return statusReg;
}

/**
 * param sim_number - Номер смарт карты 0 - большая, 1 - маленькая.
 * */
char*  read_serial_number()// функция запроса серийного номера
{
	int serial_number;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);

	//APDU шапка
	cinterfacesmartcard.transmit_buffer[0]=0x80; // Номер класса
	cinterfacesmartcard.transmit_buffer[1]=0xCA; // Номер инструкции
	cinterfacesmartcard.transmit_buffer[2]=0x00; // Аргумент 1
	cinterfacesmartcard.transmit_buffer[3]=0x00; // Аргумент 2
	cinterfacesmartcard.transmit_buffer[4]=0x04; // Аргумент 3

	write_byte(&ccomanda,5,&cinterfacesmartcard,0);
	while(cinterfacesmartcard.ok==0){}
    cinterfacesmartcard.ok=0;

	byt[0]=cinterfacesmartcard.reciver_buffer[1];
	byt[1]=cinterfacesmartcard.reciver_buffer[2];
	byt[2]=cinterfacesmartcard.reciver_buffer[3];
	byt[3]=cinterfacesmartcard.reciver_buffer[4];
	serial_number=*qwd_byt;

	return *byt;
}


unsigned diversify_key(char* key)
{
	int serial_number;
		Ccomanda ccomanda;
		char byt[4];
		unsigned *qwd_byt;
		qwd_byt=(unsigned*)(byt);
		//APDU шапка
		cinterfacesmartcard.transmit_buffer[0]=0x80; // Номер класса
		cinterfacesmartcard.transmit_buffer[1]=0x48; // Номер инструкции
		cinterfacesmartcard.transmit_buffer[2]=0x00; // Аргумент 1
		cinterfacesmartcard.transmit_buffer[3]=0x00; // Аргумент 2
		cinterfacesmartcard.transmit_buffer[4]=0x04; // Аргумент 3
		write_byte(&ccomanda,5,&cinterfacesmartcard,0);
		while(cinterfacesmartcard.ok==0){}
	    cinterfacesmartcard.ok=0;

	    cinterfacesmartcard.transmit_buffer[0]=key[0]; // Номер класса
	    cinterfacesmartcard.transmit_buffer[1]=key[1]; // Номер инструкции
	    cinterfacesmartcard.transmit_buffer[2]=key[2]; // Аргумент 1
	    cinterfacesmartcard.transmit_buffer[3]=key[3]; // Аргумент 2
	    write_byte(&ccomanda,4,&cinterfacesmartcard,0);
	    while(cinterfacesmartcard.ok==0){}
	    cinterfacesmartcard.ok=0;

		byt[0]=cinterfacesmartcard.reciver_buffer[1];
		byt[1]=cinterfacesmartcard.reciver_buffer[2];
		byt[2]=cinterfacesmartcard.reciver_buffer[3];
		byt[3]=cinterfacesmartcard.reciver_buffer[4];
		serial_number=*qwd_byt;
		return serial_number;
}
/**
 * param sim_number - Номер смарт карты 0 - большая, 1 - маленькая.
 * */
unsigned create_kf()
{
	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);

	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0x36; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x10; //номер KF в формате 1n
	cinterfacesmartcard.transmit_buffer[3]=0x00; //арг 2
	cinterfacesmartcard.transmit_buffer[4]=0x0a; //Lc

	write_byte(&ccomanda,5,&cinterfacesmartcard, 0);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	cinterfacesmartcard.transmit_buffer[0]=0x00;
	cinterfacesmartcard.transmit_buffer[1]=0x00;//
	cinterfacesmartcard.transmit_buffer[2]=0x00;//Кончились
	cinterfacesmartcard.transmit_buffer[3]=0x00; //10 попыток предъяв пароля/аутентификации
	cinterfacesmartcard.transmit_buffer[4]=0x00; //
	cinterfacesmartcard.transmit_buffer[5]=0x00;
	cinterfacesmartcard.transmit_buffer[6]=0x00;
	cinterfacesmartcard.transmit_buffer[7]=0x00;
	cinterfacesmartcard.transmit_buffer[8]=0x00;
	cinterfacesmartcard.transmit_buffer[9]=0xFF;//условия доступа FF
	cinterfacesmartcard.transmit_buffer[10]=0x3E;//   b0)пароль b1) ключ должен быть диверсифицирован перед внешней, взаимной
	//или внутренней аутентификацией  b2)ключ может быть использован в режиме шифратора b3)-ключ может быть использован для односторонней аутентифи-
	//кации b4)ключ может быть использован для взаимной аутентификации b5)при использование ключа в режиме шифратора будет выраба-
	//тываться сеансовый ключ b6)при использование ключа не будут включаться меры специальной защиты b7)ключ не блокирован безвозвратно
	write_byte(&ccomanda,11,&cinterfacesmartcard, 0);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[3]=cinterfacesmartcard.reciver_buffer[3]; //
	byt[4]=cinterfacesmartcard.reciver_buffer[4];
	byt[5]=cinterfacesmartcard.reciver_buffer[5];
	byt[6]=cinterfacesmartcard.reciver_buffer[6];

	somo_test=*qwd_byt;
	return somo_test;

}

unsigned internal_auth(char sim_number)
{
	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0x88; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00;

	write_byte(&ccomanda,4,&cinterfacesmartcard, sim_number);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	cinterfacesmartcard.transmit_buffer[0]=0x08;
	write_byte(&ccomanda,1,&cinterfacesmartcard, sim_number);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	cinterfacesmartcard.transmit_buffer[0]=0x01;
	cinterfacesmartcard.transmit_buffer[1]=0x01;
	cinterfacesmartcard.transmit_buffer[2]=0x01;
	cinterfacesmartcard.transmit_buffer[3]=0x01;
	cinterfacesmartcard.transmit_buffer[4]=0x01;
	cinterfacesmartcard.transmit_buffer[5]=0x01;
	cinterfacesmartcard.transmit_buffer[6]=0x01;
	cinterfacesmartcard.transmit_buffer[7]=0x01;
	write_byte(&ccomanda,8,&cinterfacesmartcard, sim_number);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	cinterfacesmartcard.transmit_buffer[0]=0x06;
	write_byte(&ccomanda,1,&cinterfacesmartcard, sim_number);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[4];
	byt[2]=cinterfacesmartcard.reciver_buffer[5];
	byt[2]=cinterfacesmartcard.reciver_buffer[6];
	somo_test=*qwd_byt;
	return somo_test;
}


unsigned create_ef()
{
	int somo_test;
		Ccomanda ccomanda;
		char byt[4];
		unsigned *qwd_byt;
		qwd_byt=(unsigned*)(byt);
		cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
		cinterfacesmartcard.transmit_buffer[1]=0x34; //передаем номер инстртукции
		cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
		cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
		cinterfacesmartcard.transmit_buffer[4]=0x0d;


		write_byte(&ccomanda,5,&cinterfacesmartcard,0);
		while(cinterfacesmartcard.ok==0){}
		cinterfacesmartcard.ok=0;


		cinterfacesmartcard.transmit_buffer[0]=0x00; //размер файла
		cinterfacesmartcard.transmit_buffer[1]=0x10; //размер файла

		write_byte(&ccomanda,2,&cinterfacesmartcard,0);
		while(cinterfacesmartcard.ok==0){}
		cinterfacesmartcard.ok=0;


		cinterfacesmartcard.transmit_buffer[0]=0x00; // индификатор файла
		cinterfacesmartcard.transmit_buffer[1]=0x00; // индификатор файла

		write_byte(&ccomanda,2,&cinterfacesmartcard,0);
			while(cinterfacesmartcard.ok==0){}
			cinterfacesmartcard.ok=0;


		cinterfacesmartcard.transmit_buffer[0]=0x00; // индификатор файла
		cinterfacesmartcard.transmit_buffer[1]=0x00; // индификатор файла
		cinterfacesmartcard.transmit_buffer[2]=0x00;
		cinterfacesmartcard.transmit_buffer[3]=0x00;
		cinterfacesmartcard.transmit_buffer[4]=0x00;
		cinterfacesmartcard.transmit_buffer[5]=0x00;
		cinterfacesmartcard.transmit_buffer[6]=0x00;
		cinterfacesmartcard.transmit_buffer[7]=0x00;

		write_byte(&ccomanda,8,&cinterfacesmartcard,0);
				while(cinterfacesmartcard.ok==0){}
				cinterfacesmartcard.ok=0;

		cinterfacesmartcard.transmit_buffer[0]=0x00;

		write_byte(&ccomanda,1,&cinterfacesmartcard,0);
		while(cinterfacesmartcard.ok==0){}
		cinterfacesmartcard.ok=0;

		byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
		byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
		byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
		byt[3]=0; //
		somo_test=*qwd_byt;
		return somo_test;
}

/*
unsigned check_rom(char sim_number)
{
	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0x52; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00;

	write_byte(&ccomanda,4,&cinterfacesmartcard, sim_number);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	cinterfacesmartcard.transmit_buffer[0]=0x20;
	write_byte(&ccomanda,1,&cinterfacesmartcard, sim_number);
	while(cinterfacesmartcard.ok==0){} ///
	cinterfacesmartcard.ok=0;


	cinterfacesmartcard.transmit_buffer[0]=0x00;
	cinterfacesmartcard.transmit_buffer[1]=0x00;
	cinterfacesmartcard.transmit_buffer[2]=0x00;
	cinterfacesmartcard.transmit_buffer[3]=0x11;
	cinterfacesmartcard.transmit_buffer[4]=0x11;
	cinterfacesmartcard.transmit_buffer[5]=0x11;
	cinterfacesmartcard.transmit_buffer[6]=0x11;
	cinterfacesmartcard.transmit_buffer[7]=0x00;
	cinterfacesmartcard.transmit_buffer[8]=0x00;
	cinterfacesmartcard.transmit_buffer[9]=0x00;
	cinterfacesmartcard.transmit_buffer[10]=0x00;
	cinterfacesmartcard.transmit_buffer[11]=0x00;
	cinterfacesmartcard.transmit_buffer[12]=0x00;
	cinterfacesmartcard.transmit_buffer[13]=0x00;
	cinterfacesmartcard.transmit_buffer[14]=0x00;
	cinterfacesmartcard.transmit_buffer[15]=0x00;
	cinterfacesmartcard.transmit_buffer[16]=0x00;
	cinterfacesmartcard.transmit_buffer[17]=0x00;
	cinterfacesmartcard.transmit_buffer[18]=0x00;
	cinterfacesmartcard.transmit_buffer[19]=0x00;
	cinterfacesmartcard.transmit_buffer[20]=0x00;
	cinterfacesmartcard.transmit_buffer[21]=0x00;
	cinterfacesmartcard.transmit_buffer[22]=0x00;
	cinterfacesmartcard.transmit_buffer[23]=0x00;
	cinterfacesmartcard.transmit_buffer[24]=0x00;
	cinterfacesmartcard.transmit_buffer[25]=0x00;
	cinterfacesmartcard.transmit_buffer[26]=0x00;
	cinterfacesmartcard.transmit_buffer[27]=0x00;
	cinterfacesmartcard.transmit_buffer[28]=0x00;
	cinterfacesmartcard.transmit_buffer[29]=0x00;
	cinterfacesmartcard.transmit_buffer[30]=0x00;
	cinterfacesmartcard.transmit_buffer[31]=0x00;

	write_byte(&ccomanda,32,&cinterfacesmartcard, sim_number);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	cinterfacesmartcard.transmit_buffer[0]=0x04;
	write_byte(&ccomanda,1,&cinterfacesmartcard, sim_number);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	byt[3]=0; //
	somo_test=*qwd_byt;
	return somo_test;
}
*/

//работает
unsigned test_result()// функция запроса теста системы
{
	unsigned somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0x38; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
	cinterfacesmartcard.transmit_buffer[4]=0x03; //менты
	write_byte(&ccomanda,5,&cinterfacesmartcard,0);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;
	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	somo_test=*qwd_byt;

	int i =0;

	    for(i = 0; i < 1024;i++)
	    {
	    	cinterfacesmartcard.transmit_buffer[i] = 0;
	    }

	//int i =0;
	//  for(i = 0; i < 1024;i++)
	 //   {
	//    	cinterfacesmartcard.reciver_buffer[i] = 0;
	 //   }

	return somo_test;
}


unsigned test_fs()// функция запроса теста системы
{
	unsigned somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0xF0; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
	cinterfacesmartcard.transmit_buffer[4]=0x04;

	write_byte(&ccomanda,5,&cinterfacesmartcard,0);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	somo_test=*qwd_byt;

	int i =0;
	  for(i = 0; i < 1024;i++)
	    {
	    	cinterfacesmartcard.reciver_buffer[i] = 0;
	    }

	return somo_test;
}

unsigned delete(char tk_1, char tk_2)
{
	int somo_test,i;
			Ccomanda ccomanda;
			char byt[4];
			unsigned *qwd_byt;
			qwd_byt=(unsigned*)(byt);

			cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
					cinterfacesmartcard.transmit_buffer[1]=0xe4; //передаем номер инстртукции
					cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
					cinterfacesmartcard.transmit_buffer[3]=0x00;

					write_byte(&ccomanda,4,&cinterfacesmartcard,0);
					while(cinterfacesmartcard.ok==0){}
					cinterfacesmartcard.ok=0;

					cinterfacesmartcard.transmit_buffer[0]=0x00;
					write_byte(&ccomanda,1,&cinterfacesmartcard,0);
					while(cinterfacesmartcard.ok==0){}
					cinterfacesmartcard.ok=0;

					cinterfacesmartcard.transmit_buffer[0]=tk_1; //3F
					cinterfacesmartcard.transmit_buffer[1]=tk_2; // 00
					write_byte(&ccomanda,2,&cinterfacesmartcard,0);
					while(cinterfacesmartcard.ok==0){}
					cinterfacesmartcard.ok=0;

					byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
					byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
					byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
					byt[3]=0; //
					somo_test=*qwd_byt;
					return somo_test;

}
//работает
unsigned select(char tk_1, char tk_2)
{
	int somo_test,i;
		Ccomanda ccomanda;
		char byt[4];
		unsigned *qwd_byt;
		qwd_byt=(unsigned*)(byt);

		/*
		cinterfacesmartcard.transmit_buffer[0] = 0x80;
		cinterfacesmartcard.transmit_buffer[1] = 0x32;
		cinterfacesmartcard.transmit_buffer[2] = 0x00;
		cinterfacesmartcard.transmit_buffer[3] = 0x00;
		cinterfacesmartcard.transmit_buffer[4] = 0x0b;


	cinterfacesmartcard.transmit_buffer[0] = 0x80;
		cinterfacesmartcard.transmit_buffer[1] = 0x32;
		cinterfacesmartcard.transmit_buffer[2] = 0x00;
		cinterfacesmartcard.transmit_buffer[3] = 0x00;
		cinterfacesmartcard.transmit_buffer[4] = 0x0b;

		//for(i=5;i<64;i++)
		//{
		//	cinterfacesmartcard.transmit_buffer[i]=33;
		//}

		write_byte(&ccomanda,5,&cinterfacesmartcard,0);
		while(cinterfacesmartcard.ok==0){}
		cinterfacesmartcard.ok=0;
}

		cinterfacesmartcard.transmit_buffer[0]=0x66;
		cinterfacesmartcard.transmit_buffer[1]=0x66;
		cinterfacesmartcard.transmit_buffer[2]=0x66;
		cinterfacesmartcard.transmit_buffer[3]=0x66;
		cinterfacesmartcard.transmit_buffer[4]=0x66;
		cinterfacesmartcard.transmit_buffer[5]=0x66;
		cinterfacesmartcard.transmit_buffer[6]=0x66;
		cinterfacesmartcard.transmit_buffer[7]=0x66;
		cinterfacesmartcard.transmit_buffer[8]=0x66;
		cinterfacesmartcard.transmit_buffer[9]=0x66;
		cinterfacesmartcard.transmit_buffer[10]=0x66;
		cinterfacesmartcard.transmit_buffer[11]=0x66;
		cinterfacesmartcard.transmit_buffer[12]=0x66;
		cinterfacesmartcard.transmit_buffer[13]=0x66;
		cinterfacesmartcard.transmit_buffer[14]=0x66;
		cinterfacesmartcard.transmit_buffer[15]=0x66;

	*/
		//while(1)
	//	{
		cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
		cinterfacesmartcard.transmit_buffer[1]=0xa4; //передаем номер инстртукции
		cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
		cinterfacesmartcard.transmit_buffer[3]=0x00;

		write_byte(&ccomanda,4,&cinterfacesmartcard,0);
		while(cinterfacesmartcard.ok==0){}
		cinterfacesmartcard.ok=0;

		cinterfacesmartcard.transmit_buffer[0]=0x02;
		write_byte(&ccomanda,1,&cinterfacesmartcard,0);
		while(cinterfacesmartcard.ok==0){}
		cinterfacesmartcard.ok=0;

		cinterfacesmartcard.transmit_buffer[0]=tk_1; //3F
		cinterfacesmartcard.transmit_buffer[1]=tk_2; // 00
		write_byte(&ccomanda,2,&cinterfacesmartcard,0);
		while(cinterfacesmartcard.ok==0){}
		cinterfacesmartcard.ok=0;

		byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
		byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
		byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
		byt[3]=0; //
		somo_test=*qwd_byt;
		return somo_test;
}

unsigned update_key(char* key)
{
	int somo_test;
				Ccomanda ccomanda;
				char byt[4];
				unsigned *qwd_byt;
				qwd_byt=(unsigned*)(byt);
				cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
				cinterfacesmartcard.transmit_buffer[1]=0xDC; //передаем номер инстртукции
				cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
				cinterfacesmartcard.transmit_buffer[3]=0x00; //
				cinterfacesmartcard.transmit_buffer[4]=0x24;

				write_byte(&ccomanda,5,&cinterfacesmartcard,0);
				while(cinterfacesmartcard.ok==0){}
				cinterfacesmartcard.ok=0;


				cinterfacesmartcard.transmit_buffer[0]= key[0] ;
				cinterfacesmartcard.transmit_buffer[1]= key[1] ;
				cinterfacesmartcard.transmit_buffer[2]= key[2] ;
				cinterfacesmartcard.transmit_buffer[3]= key[3] ;
				cinterfacesmartcard.transmit_buffer[4]= key[0] ;
				cinterfacesmartcard.transmit_buffer[5]= key[1] ;
				cinterfacesmartcard.transmit_buffer[6]= key[2] ;
				cinterfacesmartcard.transmit_buffer[7]= key[3] ;

				cinterfacesmartcard.transmit_buffer[8]= key[0] ;
				cinterfacesmartcard.transmit_buffer[9]= key[1] ;
				cinterfacesmartcard.transmit_buffer[10]= key[2] ;
				cinterfacesmartcard.transmit_buffer[11]= key[3] ;

				cinterfacesmartcard.transmit_buffer[8]= key[0] ;
				cinterfacesmartcard.transmit_buffer[9]= key[1] ;
				cinterfacesmartcard.transmit_buffer[10]= key[2] ;
				cinterfacesmartcard.transmit_buffer[11]= key[3] ;

				cinterfacesmartcard.transmit_buffer[12]= key[0] ;
				cinterfacesmartcard.transmit_buffer[13]= key[1] ;
				cinterfacesmartcard.transmit_buffer[14]= key[2] ;
				cinterfacesmartcard.transmit_buffer[15]= key[3] ;

				cinterfacesmartcard.transmit_buffer[16]= key[0] ;
				cinterfacesmartcard.transmit_buffer[17]= key[1] ;
				cinterfacesmartcard.transmit_buffer[18]= key[2] ;
				cinterfacesmartcard.transmit_buffer[19]= key[3] ;

				cinterfacesmartcard.transmit_buffer[20]= key[0] ;
				cinterfacesmartcard.transmit_buffer[21]= key[1] ;
				cinterfacesmartcard.transmit_buffer[22]= key[2] ;
				cinterfacesmartcard.transmit_buffer[23]= key[3] ;

				cinterfacesmartcard.transmit_buffer[24]= key[0] ;
				cinterfacesmartcard.transmit_buffer[25]= key[1] ;
				cinterfacesmartcard.transmit_buffer[26]= key[2] ;
				cinterfacesmartcard.transmit_buffer[27]= key[3] ;

				cinterfacesmartcard.transmit_buffer[28]= key[0] ;
				cinterfacesmartcard.transmit_buffer[29]= key[1] ;
				cinterfacesmartcard.transmit_buffer[30]= key[2] ;
				cinterfacesmartcard.transmit_buffer[31]= key[3] ;

				cinterfacesmartcard.transmit_buffer[32]= key[0] ;
				cinterfacesmartcard.transmit_buffer[33]= key[1] ;
				cinterfacesmartcard.transmit_buffer[34]= key[2] ;
				cinterfacesmartcard.transmit_buffer[35]= key[3] ;


				write_byte(&ccomanda,36,&cinterfacesmartcard,0);
				while(cinterfacesmartcard.ok==0){}
				cinterfacesmartcard.ok=0;

				byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
				byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
				byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
				byt[3]=0; //
				somo_test=*qwd_byt;
				return somo_test;
}

unsigned load_key(char* key)
{
	int somo_test;
			Ccomanda ccomanda;
			char byt[4];
			unsigned *qwd_byt;
			qwd_byt=(unsigned*)(byt);
			cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
			cinterfacesmartcard.transmit_buffer[1]=0xE2; //передаем номер инстртукции
			cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
			cinterfacesmartcard.transmit_buffer[3]=0x00; //
			cinterfacesmartcard.transmit_buffer[4]=0x24;

			write_byte(&ccomanda,5,&cinterfacesmartcard,0);
			while(cinterfacesmartcard.ok==0){}
			cinterfacesmartcard.ok=0;


			cinterfacesmartcard.transmit_buffer[0]= key[0] ;
			cinterfacesmartcard.transmit_buffer[1]= key[1] ;
			cinterfacesmartcard.transmit_buffer[2]= key[2] ;
			cinterfacesmartcard.transmit_buffer[3]= key[3] ;
			cinterfacesmartcard.transmit_buffer[4]= key[0] ;
			cinterfacesmartcard.transmit_buffer[5]= key[1] ;
			cinterfacesmartcard.transmit_buffer[6]= key[2] ;
			cinterfacesmartcard.transmit_buffer[7]= key[3] ;

			cinterfacesmartcard.transmit_buffer[8]= key[0] ;
			cinterfacesmartcard.transmit_buffer[9]= key[1] ;
			cinterfacesmartcard.transmit_buffer[10]= key[2] ;
			cinterfacesmartcard.transmit_buffer[11]= key[3] ;

			cinterfacesmartcard.transmit_buffer[8]= key[0] ;
			cinterfacesmartcard.transmit_buffer[9]= key[1] ;
			cinterfacesmartcard.transmit_buffer[10]= key[2] ;
			cinterfacesmartcard.transmit_buffer[11]= key[3] ;

			cinterfacesmartcard.transmit_buffer[12]= key[0] ;
			cinterfacesmartcard.transmit_buffer[13]= key[1] ;
			cinterfacesmartcard.transmit_buffer[14]= key[2] ;
			cinterfacesmartcard.transmit_buffer[15]= key[3] ;

			cinterfacesmartcard.transmit_buffer[16]= key[0] ;
			cinterfacesmartcard.transmit_buffer[17]= key[1] ;
			cinterfacesmartcard.transmit_buffer[18]= key[2] ;
			cinterfacesmartcard.transmit_buffer[19]= key[3] ;

			cinterfacesmartcard.transmit_buffer[20]= key[0] ;
			cinterfacesmartcard.transmit_buffer[21]= key[1] ;
			cinterfacesmartcard.transmit_buffer[22]= key[2] ;
			cinterfacesmartcard.transmit_buffer[23]= key[3] ;

			cinterfacesmartcard.transmit_buffer[24]= key[0] ;
			cinterfacesmartcard.transmit_buffer[25]= key[1] ;
			cinterfacesmartcard.transmit_buffer[26]= key[2] ;
			cinterfacesmartcard.transmit_buffer[27]= key[3] ;

			cinterfacesmartcard.transmit_buffer[28]= key[0] ;
			cinterfacesmartcard.transmit_buffer[29]= key[1] ;
			cinterfacesmartcard.transmit_buffer[30]= key[2] ;
			cinterfacesmartcard.transmit_buffer[31]= key[3] ;

			cinterfacesmartcard.transmit_buffer[32]= key[0] ;
			cinterfacesmartcard.transmit_buffer[33]= key[1] ;
			cinterfacesmartcard.transmit_buffer[34]= key[2] ;
			cinterfacesmartcard.transmit_buffer[35]= key[3] ;


			write_byte(&ccomanda,36,&cinterfacesmartcard,0);
			while(cinterfacesmartcard.ok==0){}
			cinterfacesmartcard.ok=0;

			byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
			byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
			byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
			byt[3]=0; //
			somo_test=*qwd_byt;
			return somo_test;
}

char* get_session_key(char* mass)
{
	int somo_test;
			Ccomanda ccomanda;
			char byt[6];

			unsigned *qwd_byt;
			qwd_byt=(unsigned*)(byt);
			cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
			cinterfacesmartcard.transmit_buffer[1]=0x4a; //передаем номер инстртукции
			cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
			cinterfacesmartcard.transmit_buffer[3]=0x00; //
			cinterfacesmartcard.transmit_buffer[4]=0x10;

			write_byte(&ccomanda,5,&cinterfacesmartcard,0);
						while(cinterfacesmartcard.ok==0){}
						cinterfacesmartcard.ok=0;


			int i;

			for( i =0 ; i < 16; i++)
			{
				cinterfacesmartcard.transmit_buffer[i] = mass[i];
			}

			write_byte(&ccomanda,16,&cinterfacesmartcard,0);
			while(cinterfacesmartcard.ok==0){}
			cinterfacesmartcard.ok=0;

			cinterfacesmartcard.transmit_buffer[0] = 0x06;

			write_byte(&ccomanda,1,&cinterfacesmartcard,0);
			while(cinterfacesmartcard.ok==0){}
			cinterfacesmartcard.ok=0;

			/*
			cinterfacesmartcard.transmit_buffer[0] = 0x4A;


			write_byte(&ccomanda,1,&cinterfacesmartcard,0);
			while(cinterfacesmartcard.ok==0){}
			cinterfacesmartcard.ok=0;

			cinterfacesmartcard.transmit_buffer[0] = 0x00;


			write_byte(&ccomanda,1,&cinterfacesmartcard,0);
			while(cinterfacesmartcard.ok==0){}
			cinterfacesmartcard.ok=0;

			cinterfacesmartcard.transmit_buffer[0] = 0x00;


			write_byte(&ccomanda,1,&cinterfacesmartcard,0);
			while(cinterfacesmartcard.ok==0){}
			cinterfacesmartcard.ok=0;

			cinterfacesmartcard.transmit_buffer[0] = 0x10;


			write_byte(&ccomanda,1,&cinterfacesmartcard,0);
			while(cinterfacesmartcard.ok==0){}
			cinterfacesmartcard.ok=0;

			*/


			byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
			byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
			byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
			byt[3]=cinterfacesmartcard.reciver_buffer[4]; //
			byt[4]=cinterfacesmartcard.reciver_buffer[5]; //
			byt[5]=cinterfacesmartcard.reciver_buffer[6]; //
			somo_test=*qwd_byt;



			return *byt;
}


//работает
char* get_challenge()
{
	int somo_test;
		Ccomanda ccomanda;
		char byt[4];
		unsigned *qwd_byt;
		qwd_byt=(unsigned*)(byt);
		cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
		cinterfacesmartcard.transmit_buffer[1]=0x84; //передаем номер инстртукции
		cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
		cinterfacesmartcard.transmit_buffer[3]=0x00; //
		cinterfacesmartcard.transmit_buffer[4]=0x10; // 0x08
		write_byte(&ccomanda,5,&cinterfacesmartcard,0);
		while(cinterfacesmartcard.ok==0){}
		cinterfacesmartcard.ok=0;

		byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
		byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
		byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
		byt[3]=0; //
		somo_test=*qwd_byt;

		char byt2[16];


					byt2[0]=cinterfacesmartcard.reciver_buffer[1];
					byt2[1]=cinterfacesmartcard.reciver_buffer[2];
					byt2[2]=cinterfacesmartcard.reciver_buffer[3];
					byt2[3]=cinterfacesmartcard.reciver_buffer[4];
					byt2[4]=cinterfacesmartcard.reciver_buffer[5];
					byt2[5]=cinterfacesmartcard.reciver_buffer[6];
					byt2[6]=cinterfacesmartcard.reciver_buffer[7];
					byt2[7]=cinterfacesmartcard.reciver_buffer[8];
					byt2[8]=cinterfacesmartcard.reciver_buffer[9];
					byt2[9]=cinterfacesmartcard.reciver_buffer[10];
					byt2[10]=cinterfacesmartcard.reciver_buffer[11];
					byt2[11]=cinterfacesmartcard.reciver_buffer[12];
					byt2[12]=cinterfacesmartcard.reciver_buffer[13];
					byt2[13]=cinterfacesmartcard.reciver_buffer[14];
					byt2[14]=cinterfacesmartcard.reciver_buffer[15];
					byt2[15]=cinterfacesmartcard.reciver_buffer[16];

		return *byt2;
}


unsigned unlock_key()
{
	int somo_test;
			Ccomanda ccomanda;
			char byt[4];
			unsigned *qwd_byt;
			qwd_byt=(unsigned*)(byt);
			cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
			cinterfacesmartcard.transmit_buffer[1]=0x4e; //передаем номер инстртукции
			cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
			cinterfacesmartcard.transmit_buffer[3]=0x00; //
			cinterfacesmartcard.transmit_buffer[4]=0x00; //
			write_byte(&ccomanda,5,&cinterfacesmartcard,0);
			while(cinterfacesmartcard.ok==0){}
			cinterfacesmartcard.ok=0;
			byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
			byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
			byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
			byt[3]=0; //
			somo_test=*qwd_byt;
			return somo_test;
}

unsigned check_rom()
{
	int somo_test;
		Ccomanda ccomanda;
		char byt[4];
		unsigned *qwd_byt;
		qwd_byt=(unsigned*)(byt);
		cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
		cinterfacesmartcard.transmit_buffer[1]=0x52; //передаем номер инстртукции
		cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
		cinterfacesmartcard.transmit_buffer[3]=0x00;
		cinterfacesmartcard.transmit_buffer[4]=0x20;

		write_byte(&ccomanda,5,&cinterfacesmartcard,0);
		while(cinterfacesmartcard.ok==0){}
		cinterfacesmartcard.ok=0;

		cinterfacesmartcard.transmit_buffer[0]=0x21;//0xAB;
		cinterfacesmartcard.transmit_buffer[1]=0x21;//0x49;
		cinterfacesmartcard.transmit_buffer[2]=0x21;//0xB8;
		cinterfacesmartcard.transmit_buffer[3]=0x21;//0xF7;
		cinterfacesmartcard.transmit_buffer[4]=0x21;//0xAB;
		cinterfacesmartcard.transmit_buffer[5]=0x21;//0x49;
		cinterfacesmartcard.transmit_buffer[6]=0x21;//0xB8;
		cinterfacesmartcard.transmit_buffer[7]=0x21;//0xF7;
		cinterfacesmartcard.transmit_buffer[8]=0x21;//0xAB;
		cinterfacesmartcard.transmit_buffer[9]=0x21;//0x49;
		cinterfacesmartcard.transmit_buffer[10]=0x21;//0xB8;
		cinterfacesmartcard.transmit_buffer[11]=0x21;//0xF7;
		cinterfacesmartcard.transmit_buffer[12]=0x21;//0xAB;
		cinterfacesmartcard.transmit_buffer[13]=0x21;//0x49;
		cinterfacesmartcard.transmit_buffer[14]=0x21;//0xB8;
		cinterfacesmartcard.transmit_buffer[15]=0x21;//0xF7;
		cinterfacesmartcard.transmit_buffer[16]=0x21;//0xAB;
		cinterfacesmartcard.transmit_buffer[17]=0x21;//0x49;
		cinterfacesmartcard.transmit_buffer[18]=0x21;//0xB8;
		cinterfacesmartcard.transmit_buffer[19]=0x21;//0xF7;
		cinterfacesmartcard.transmit_buffer[20]=0x21;//0xAB;
		cinterfacesmartcard.transmit_buffer[20]=0x04;
		cinterfacesmartcard.transmit_buffer[21]=0x21;//0x49;
		cinterfacesmartcard.transmit_buffer[22]=0x21;//0xB8;
		cinterfacesmartcard.transmit_buffer[23]=0x21;//0xF7;
		cinterfacesmartcard.transmit_buffer[24]=0x21;//0xAB;
		cinterfacesmartcard.transmit_buffer[25]=0x21;//0x49;
		cinterfacesmartcard.transmit_buffer[26]=0x21;//0xB8;
		cinterfacesmartcard.transmit_buffer[27]=0x21;//0xF7;
		cinterfacesmartcard.transmit_buffer[28]=0x21;//0xAB;
		cinterfacesmartcard.transmit_buffer[29]=0x21;
		cinterfacesmartcard.transmit_buffer[30]=0x21;//0xB8;
		cinterfacesmartcard.transmit_buffer[31]=0x21;//0xF7;
		cinterfacesmartcard.transmit_buffer[32]=0x21;//0xAB;
		cinterfacesmartcard.transmit_buffer[33]=0x04;

		write_byte(&ccomanda,20,&cinterfacesmartcard,0);
				while(cinterfacesmartcard.ok==0){}
				cinterfacesmartcard.ok=0;


		//write_byte(&ccomanda,39,&cinterfacesmartcard,0);
		//while(cinterfacesmartcard.ok==0){}
		//cinterfacesmartcard.ok=0;

		byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
		byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
		byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
		byt[3]=0; //
		somo_test=*qwd_byt;
		return somo_test;
}


unsigned write_tk_pl()
{

	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0x3A; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
	cinterfacesmartcard.transmit_buffer[4]=0x08; //менты


	write_byte(&ccomanda,5,&cinterfacesmartcard,0);
		while(cinterfacesmartcard.ok==0){}
		cinterfacesmartcard.ok=0;


	cinterfacesmartcard.transmit_buffer[0]=0x20;//0xAB;
	cinterfacesmartcard.transmit_buffer[1]=0x20;//0x49;
	cinterfacesmartcard.transmit_buffer[2]=0x20;//0xB8;
	cinterfacesmartcard.transmit_buffer[3]=0x20;//0xF7;
	cinterfacesmartcard.transmit_buffer[4]=0x20;//0xAB;
	cinterfacesmartcard.transmit_buffer[5]=0x20;//0x49;
	cinterfacesmartcard.transmit_buffer[6]=0x20;//0xB8;
	cinterfacesmartcard.transmit_buffer[7]=0x20;//0xF7;
	cinterfacesmartcard.transmit_buffer[8]=0x20;
	write_byte(&ccomanda,9,&cinterfacesmartcard,0);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	byt[3]=0; //
	somo_test=*qwd_byt;

	int i =0;

	    for(i = 0; i < 1024;i++)
	    {
	    	cinterfacesmartcard.transmit_buffer[i] = 0;
	    }



	return somo_test;
}


unsigned read_binary()
{
	int somo_test;
		Ccomanda ccomanda;
		char byt[4];
		unsigned *qwd_byt;
		qwd_byt=(unsigned*)(byt);
		cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
		cinterfacesmartcard.transmit_buffer[1]=0xB0; //передаем номер инстртукции
		cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
		cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
		cinterfacesmartcard.transmit_buffer[4]=0x00;

		write_byte(&ccomanda,5,&cinterfacesmartcard,0);
		while(cinterfacesmartcard.ok==0){}
		cinterfacesmartcard.ok=0;


		byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
		byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
		byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
		byt[3]=0; //
		somo_test=*qwd_byt;
		return somo_test;
}


//работает если Мастер файла не существует (обратиться к нему можно командой SELECT по адресу 3F 00
unsigned create_mf()
{
	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0x30; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
	cinterfacesmartcard.transmit_buffer[4]=0x09;

	write_byte(&ccomanda,5,&cinterfacesmartcard,0);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;



	cinterfacesmartcard.transmit_buffer[0]=0x01;

	write_byte(&ccomanda,1,&cinterfacesmartcard,0);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;


	cinterfacesmartcard.transmit_buffer[0]=0x00; //менты
	cinterfacesmartcard.transmit_buffer[1]=0x00;
	cinterfacesmartcard.transmit_buffer[2]=0x00;
	cinterfacesmartcard.transmit_buffer[3]=0x00;
	cinterfacesmartcard.transmit_buffer[4]=0x00;
	cinterfacesmartcard.transmit_buffer[5]=0x00;
	cinterfacesmartcard.transmit_buffer[6]=0x00;
	cinterfacesmartcard.transmit_buffer[7]=0x00;

	write_byte(&ccomanda,8,&cinterfacesmartcard,0);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	byt[3]=0; //
	somo_test=*qwd_byt;
	return somo_test;
}

unsigned restore()
{
	int somo_test;
		Ccomanda ccomanda;
		char byt[4];
		unsigned *qwd_byt;
		qwd_byt=(unsigned*)(byt);
		cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
		cinterfacesmartcard.transmit_buffer[1]=0xf4; //передаем номер инстртукции
		cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
		cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
		cinterfacesmartcard.transmit_buffer[4]=0x00;
		write_byte(&ccomanda,5,&cinterfacesmartcard,0);
		while(cinterfacesmartcard.ok==0){}
		cinterfacesmartcard.ok=0;
		byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
		byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
		byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
		byt[3]=0;
		somo_test=*qwd_byt;

		int i =0;
			  for(i = 0; i < 1024;i++)
			    {
			    	cinterfacesmartcard.reciver_buffer[i] = 0;
			    }

		return somo_test;
}
unsigned get_response()
{
	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0xc0; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
	cinterfacesmartcard.transmit_buffer[4]=0xFA; //0xFA; //менты

	write_byte(&ccomanda,5,&cinterfacesmartcard,0);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;
	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	byt[3]=0;
	somo_test=*qwd_byt;

	int i =0;
		  for(i = 0; i < 1024;i++)
		    {
		    	cinterfacesmartcard.reciver_buffer[i] = 0;
		    }

	return somo_test;
}


unsigned write_tk()
{
	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0x36; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
	cinterfacesmartcard.transmit_buffer[4]=0x08; //менты
	//write_byte(&ccomanda,5,&cinterfacesmartcard,0);
	//while(cinterfacesmartcard.ok==0){}
	//cinterfacesmartcard.ok=0;
	//cinterfacesmartcard.transmit_buffer[5]=0xab;//0xAB;
	//cinterfacesmartcard.transmit_buffer[6]=0x49;//0x49;
	//cinterfacesmartcard.transmit_buffer[7]=0xb8;//0xB8;
	//cinterfacesmartcard.transmit_buffer[8]=0xfB;//0xF7;
	//cinterfacesmartcard.transmit_buffer[9]=0xab;//0xAB;
	//cinterfacesmartcard.transmit_buffer[10]=0x49;//0x49;
	//cinterfacesmartcard.transmit_buffer[11]=0xb8;//0xB8;
	//cinterfacesmartcard.transmit_buffer[12]=0xfB;//0xF7;
	//cinterfacesmartcard.transmit_buffer[13]=0x00;

	cinterfacesmartcard.transmit_buffer[5]=0xab;//0xAB;
		cinterfacesmartcard.transmit_buffer[6]=0x49;//0x49;
		cinterfacesmartcard.transmit_buffer[7]=0xb8;//0xB8;
		cinterfacesmartcard.transmit_buffer[8]=0xfb;//0xF7;
		cinterfacesmartcard.transmit_buffer[9]=0xab;//0xAB;
		cinterfacesmartcard.transmit_buffer[10]=0x49;//0x49;
		cinterfacesmartcard.transmit_buffer[11]=0xb8;//0xB8;
		cinterfacesmartcard.transmit_buffer[12]=0xfb;//0xF7;
	//	cinterfacesmartcard.transmit_buffer[13]=0x00;

	write_byte(&ccomanda,13,&cinterfacesmartcard,0);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;
	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	byt[3]=0; //
	somo_test=*qwd_byt;


	int i =0;

	    for(i = 0; i < 1024;i++)
	    {
	    	cinterfacesmartcard.transmit_buffer[i] = 0;
	    }

	//int i =0;
	//for(i = 0; i < 1024;i++)
	//{
	//	cinterfacesmartcard.reciver_buffer[i] = 0;
	//}

	return somo_test;
}

unsigned verify(char tk_1, char tk_2, char tk_3, char tk_4)
{
	int somo_test;
		Ccomanda ccomanda;
		char byt[4];
		unsigned *qwd_byt;
		qwd_byt=(unsigned*)(byt);
		cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
		cinterfacesmartcard.transmit_buffer[1]=0x20; //передаем номер инстртукции
		cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
		cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
		cinterfacesmartcard.transmit_buffer[4]=0x08; //менты
		write_byte(&ccomanda,5,&cinterfacesmartcard,0);
		while(cinterfacesmartcard.ok==0){}
	    cinterfacesmartcard.ok=0;

		cinterfacesmartcard.transmit_buffer[0]=tk_1;//0xAB;
			cinterfacesmartcard.transmit_buffer[1]=tk_2;//0x49;
			cinterfacesmartcard.transmit_buffer[2]=tk_3;//0xB8;
			cinterfacesmartcard.transmit_buffer[3]=tk_4;//0xF7;
			cinterfacesmartcard.transmit_buffer[4]=tk_1;//0xAB;
			cinterfacesmartcard.transmit_buffer[5]=tk_2;//0x49;
			cinterfacesmartcard.transmit_buffer[6]=tk_3;//0xB8;
			cinterfacesmartcard.transmit_buffer[7]=tk_4;//0xF7;
		   // cinterfacesmartcard.transmit_buffer[13]=0x00;
		write_byte(&ccomanda,8,&cinterfacesmartcard,0);
		while(cinterfacesmartcard.ok==0){}
		cinterfacesmartcard.ok=0;
		byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
		byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
		byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
		byt[3]=0; //
		somo_test=*qwd_byt;



		return somo_test;
}

unsigned verify_tk(char tk_1, char tk_2, char tk_3, char tk_4) //, unsigned tk_5, unsigned tk_6, unsigned tk_7, unsigned tk_8
{
	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0x3e; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
	cinterfacesmartcard.transmit_buffer[4]=0x08; //менты
	write_byte(&ccomanda,5,&cinterfacesmartcard,0);
	while(cinterfacesmartcard.ok==0){}
    cinterfacesmartcard.ok=0;

    //cinterfacesmartcard.transmit_buffer[0]=0x08; //менты
    //	write_byte(&ccomanda,1,&cinterfacesmartcard,0);
    //	while(cinterfacesmartcard.ok==0){}
    //   cinterfacesmartcard.ok=0;

	cinterfacesmartcard.transmit_buffer[0]=tk_1;//0xAB;
		cinterfacesmartcard.transmit_buffer[1]=tk_2;//0x49;
		cinterfacesmartcard.transmit_buffer[2]=tk_3;//0xB8;
		cinterfacesmartcard.transmit_buffer[3]=tk_4;//0xF7;
		cinterfacesmartcard.transmit_buffer[4]=tk_1;//0xAB;
		cinterfacesmartcard.transmit_buffer[5]=tk_2;//0x49;
		cinterfacesmartcard.transmit_buffer[6]=tk_3;//0xB8;
		cinterfacesmartcard.transmit_buffer[7]=tk_4;//0xF7;
	   // cinterfacesmartcard.transmit_buffer[13]=0x00;
	write_byte(&ccomanda,8,&cinterfacesmartcard,0);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;
	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	byt[3]=0; //
	somo_test=*qwd_byt;



	return somo_test;
}

void SetSmartCart()
{
	int status;
	Ccomanda ccomanda;
	status=Xil_In32(baseaddress+0x238);// тип прерывания
	if(status==1)//приёмник
	{
			cinterfacesmartcard.reciver_buffer[cinterfacesmartcard.index_rec_buff]=Xil_In32(XPAR_HEAD_IP_0_BASEADDR+0x208);
			Xil_Out32(XPAR_HEAD_IP_0_BASEADDR+0x100, 4101);
		    Xil_Out32(XPAR_HEAD_IP_0_BASEADDR+0x100, 1048581);
			invert_byte(&cinterfacesmartcard.reciver_buffer[cinterfacesmartcard.index_rec_buff]);
			cinterfacesmartcard.index_rec_buff++;
	}
	if(status==2)//передатчик
	{
		Xil_Out32(baseaddress+0x100, 4101);
		Xil_Out32(XPAR_HEAD_IP_0_BASEADDR+0x100, 1048581);
		return;
	}
	if(status==3)// окончание приёма, сброс
	{
		Xil_Out32(XPAR_HEAD_IP_0_BASEADDR+0x100, 4101);
		Xil_Out32(baseaddress+0x228,50000000);// установка ожидание окончания 1 сек
		cinterfacesmartcard.number_read_byte=cinterfacesmartcard.index_rec_buff;
		cinterfacesmartcard.index_rec_buff=0;
		cinterfacesmartcard.initcil=0;
		cinterfacesmartcard.ok=1;
		return;
	}

}

/*void SetSmartCart_1()
{
	int status;
	Ccomanda ccomanda;
	status=Xil_In32(baseaddress_smoll_card+0x238);// тип прерывания
	if(status==1)//приёмник
	{
			cinterfacesmartcard.reciver_buffer[cinterfacesmartcard.index_rec_buff]=Xil_In32(XPAR_HEAD_IP_1_BASEADDR+0x208);
			Xil_Out32(XPAR_HEAD_IP_1_BASEADDR+0x100, 4101);
		    Xil_Out32(XPAR_HEAD_IP_1_BASEADDR+0x100, 131077);
			invert_byte(&cinterfacesmartcard.reciver_buffer[cinterfacesmartcard.index_rec_buff]);
			cinterfacesmartcard.index_rec_buff++;
	}
	if(status==2)//передатчик
	{
		Xil_Out32(baseaddress_smoll_card+0x100, 4101);
		Xil_Out32(XPAR_HEAD_IP_1_BASEADDR+0x100, 131077);
		return;
	}
	if(status==3)// окончание приёма, сброс
	{
		Xil_Out32(XPAR_HEAD_IP_1_BASEADDR+0x100, 4101);
		Xil_Out32(baseaddress_smoll_card+0x228,50000000);// установка ожидание окончания 1 сек
		cinterfacesmartcard.number_read_byte=cinterfacesmartcard.index_rec_buff;
		cinterfacesmartcard.index_rec_buff=0;
		cinterfacesmartcard.initcil=0;
		cinterfacesmartcard.ok=1;
		return;
	}

}*/
/*
unsigned testFS()
{
	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0xF0; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
	cinterfacesmartcard.transmit_buffer[4]=0x04; //менты
	write_byte(&ccomanda,5,&cinterfacesmartcard);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;
	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	byt[3]=0; //
	somo_test=*qwd_byt;
	return somo_test;
}
*/
unsigned create_df()
{
	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0x32; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00;
	cinterfacesmartcard.transmit_buffer[4]=0x0b; //гу
	write_byte(&ccomanda,5,&cinterfacesmartcard,0);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;


	cinterfacesmartcard.transmit_buffer[0]=0x00;
	cinterfacesmartcard.transmit_buffer[1]=0x00;
	write_byte(&ccomanda,2,&cinterfacesmartcard,0);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;


	cinterfacesmartcard.transmit_buffer[2]=0x00;
	write_byte(&ccomanda,2,&cinterfacesmartcard,0);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	cinterfacesmartcard.transmit_buffer[3]=0x00;
	cinterfacesmartcard.transmit_buffer[4]=0x00;
	cinterfacesmartcard.transmit_buffer[5]=0x00;
	cinterfacesmartcard.transmit_buffer[6]=0x00;
	cinterfacesmartcard.transmit_buffer[7]=0x00;
	cinterfacesmartcard.transmit_buffer[8]=0x00;
	cinterfacesmartcard.transmit_buffer[9]=0x00;
	cinterfacesmartcard.transmit_buffer[11]=0x00;
	write_byte(&ccomanda,12,&cinterfacesmartcard,0);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;





	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	byt[3]=0; //
	somo_test=*qwd_byt;
	return somo_test;
}

void DetectSmartCart()
{
	int status;
	status=Xil_In32(0x43C00008);
	Xil_Out32(0x43C00004,1);
	Xil_Out32(0x43C00004,0);
}


int SetUpInterruptSystem(XScuGic *XScuGicInstancePtr) //инициализация контроллера прерываний
{
	Xil_ExceptionRegisterHandler(XIL_EXCEPTION_ID_INT,
	(Xil_ExceptionHandler) XScuGic_InterruptHandler,
	XScuGicInstancePtr);
	Xil_ExceptionEnable();
	return XST_SUCCESS;
}


int ScuGicInterrupt_Init(u16 DeviceId,ProgSmartCart *pProgSmartCart, ProgSmartCart_1 *pProgSmartCart_1) //функция инициализации прерывания № 61
{
	int Status;
	XScuGic_Config *GicConfig;
	GicConfig = XScuGic_LookupConfig(DeviceId);
	if (NULL == GicConfig) {
	return XST_FAILURE;
	}
	Status = XScuGic_CfgInitialize(&InterruptController, GicConfig, GicConfig->CpuBaseAddress);
	if (Status != XST_SUCCESS) {
	return XST_FAILURE;
	}
	Status = SetUpInterruptSystem(&InterruptController);
	if (Status != XST_SUCCESS) {
	return XST_FAILURE;
	}
	//---схема управления
	Status = XScuGic_Connect(&InterruptController,61,SetSmartCart,pProgSmartCart);
	if (Status != XST_SUCCESS)
	{
		return XST_FAILURE;
	}
	XScuGic_Enable(&InterruptController, 61);

	Status = XScuGic_Connect(&InterruptController,62,DetectSmartCart,pProgSmartCart_1);
	if (Status != XST_SUCCESS)
	{
		return XST_FAILURE;
	}
	XScuGic_Enable(&InterruptController, 62);

 	return XST_SUCCESS;
}
