-- -------------------------------------------------------------
-- 
-- File Name: D:\Matlab_Vhd\smartCart\OTLADKA\hdlsrc\smartCart4_work\head_ip_src_DEMUX.vhd
-- Created: 2016-07-19 09:45:53
-- 
-- Generated by MATLAB 9.0 and HDL Coder 3.8
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: head_ip_src_DEMUX
-- Source Path: smartCart4_work/head/DEMUX
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY head_ip_src_DEMUX IS
  PORT( COMMANDA                          :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        start                             :   OUT   std_logic;
        stop                              :   OUT   std_logic;
        RD_WR                             :   OUT   std_logic;
        STEP                              :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
        RST_IRQ                           :   OUT   std_logic;
        Number_write_byte                 :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
        ON_TRANSMITE                      :   OUT   std_logic
        );
END head_ip_src_DEMUX;


ARCHITECTURE rtl OF head_ip_src_DEMUX IS

  -- Signals
  SIGNAL COMMANDA_unsigned                : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Bit_Slice_out1                   : std_logic;  -- ufix1
  SIGNAL Data_Type_Conversion_out1        : std_logic;
  SIGNAL Bit_Slice1_out1                  : std_logic;  -- ufix1
  SIGNAL Data_Type_Conversion1_out1       : std_logic;
  SIGNAL Bit_Slice2_out1                  : std_logic;  -- ufix1
  SIGNAL Data_Type_Conversion2_out1       : std_logic;
  SIGNAL Bit_Slice3_out1                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL Data_Type_Conversion3_out1       : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice4_out1                  : std_logic;  -- ufix1
  SIGNAL Data_Type_Conversion4_out1       : std_logic;
  SIGNAL Bit_Slice5_out1                  : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Data_Type_Conversion5_out1       : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice6_out1                  : std_logic;  -- ufix1
  SIGNAL Data_Type_Conversion6_out1       : std_logic;

BEGIN
  COMMANDA_unsigned <= unsigned(COMMANDA);

  Bit_Slice_out1 <= COMMANDA_unsigned(0);

  
  Data_Type_Conversion_out1 <= '1' WHEN Bit_Slice_out1 /= '0' ELSE
      '0';

  Bit_Slice1_out1 <= COMMANDA_unsigned(1);

  
  Data_Type_Conversion1_out1 <= '1' WHEN Bit_Slice1_out1 /= '0' ELSE
      '0';

  Bit_Slice2_out1 <= COMMANDA_unsigned(2);

  
  Data_Type_Conversion2_out1 <= '1' WHEN Bit_Slice2_out1 /= '0' ELSE
      '0';

  Bit_Slice3_out1 <= COMMANDA_unsigned(11 DOWNTO 3);

  Data_Type_Conversion3_out1 <= Bit_Slice3_out1(7 DOWNTO 0);

  STEP <= std_logic_vector(Data_Type_Conversion3_out1);

  Bit_Slice4_out1 <= COMMANDA_unsigned(12);

  
  Data_Type_Conversion4_out1 <= '1' WHEN Bit_Slice4_out1 /= '0' ELSE
      '0';

  Bit_Slice5_out1 <= COMMANDA_unsigned(15 DOWNTO 13);

  Data_Type_Conversion5_out1 <= resize(Bit_Slice5_out1, 8);

  Number_write_byte <= std_logic_vector(Data_Type_Conversion5_out1);

  Bit_Slice6_out1 <= COMMANDA_unsigned(16);

  
  Data_Type_Conversion6_out1 <= '1' WHEN Bit_Slice6_out1 /= '0' ELSE
      '0';

  start <= Data_Type_Conversion_out1;

  stop <= Data_Type_Conversion1_out1;

  RD_WR <= Data_Type_Conversion2_out1;

  RST_IRQ <= Data_Type_Conversion4_out1;

  ON_TRANSMITE <= Data_Type_Conversion6_out1;

END rtl;

