/*
 * smartCard.c
 *
 *  Created on: 14 сент. 2016 г.
 *      Author: Admin
 */

#include "smartCard.h"



unsigned intcial(char number_cart_rider)
{

	int statusReg;
	u32 address;
	if (number_cart_rider==0)
	{
		address=baseaddress;
	}
	else
	{
		address=baseaddress_smoll_card;
	}

	ProgSmartCart pProgSmartCart;
	ProgSmartCart_1 pProgSmartCart_1;
	statusReg=ScuGicInterrupt_Init(0,&pProgSmartCart,&pProgSmartCart_1);
	clean_cInterfaceSmartcard(&cinterfacesmartcard);// обнуление структуры cInterfaceSmartcard
	Xil_Out32(address+0x4,0x1);// вкл линию io на приём
	Xil_Out32(address+0x100,0x4);// вкл ip ядро
	Xil_Out32(address+0x228,250000000);// время обноружения конца передачи 1 сек, 1 ед = 1/500000000 сек
	Xil_Out32(address+0x230,2604);// длительность половины бита данных, вычисляется как, 3,57e6/((Fi/di)*2)
	Xil_Out32(address+0x22C, 5208);// длительность бита данных, вычисляется как, 3,57e6/((Fi/di))
	Xil_Out32(address+0x234,5208*2-100);//длительность меж байтной паузы  данных, вычисляется как, (2*3,57e6)/((Fi/di)-100)
	Xil_Out32(address+0x204,130);// длительность переходного процесса 1 ед = 1/500000000 сек
	return statusReg;
}

/**
 * param sim_number
 * */
unsigned  read_serial_number(char sim_number)// функция запроса серийного номера
{
	int serial_number;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80;
	cinterfacesmartcard.transmit_buffer[1]=0xCA;
	cinterfacesmartcard.transmit_buffer[2]=0x00;
	cinterfacesmartcard.transmit_buffer[3]=0x00;
	cinterfacesmartcard.transmit_buffer[4]=0x04;
	write_byte(&ccomanda,5,&cinterfacesmartcard, sim_number);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;
	byt[0]=cinterfacesmartcard.reciver_buffer[1];
	byt[1]=cinterfacesmartcard.reciver_buffer[2];
	byt[2]=cinterfacesmartcard.reciver_buffer[3];
	byt[3]=cinterfacesmartcard.reciver_buffer[4];
	serial_number=*qwd_byt;
	return serial_number;
}

unsigned create_kf(char sim_number)
{
	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0xE2; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x10; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00;

	write_byte(&ccomanda,4,&cinterfacesmartcard, sim_number);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	cinterfacesmartcard.transmit_buffer[0]=0x08;
	write_byte(&ccomanda,1,&cinterfacesmartcard, sim_number);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;
}

unsigned internal_auth(char sim_number)
{
	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0x88; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00;

	write_byte(&ccomanda,4,&cinterfacesmartcard, sim_number);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	cinterfacesmartcard.transmit_buffer[0]=0x08;
	write_byte(&ccomanda,1,&cinterfacesmartcard, sim_number);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	cinterfacesmartcard.transmit_buffer[0]=0x01;
	cinterfacesmartcard.transmit_buffer[1]=0x01;
	cinterfacesmartcard.transmit_buffer[2]=0x01;
	cinterfacesmartcard.transmit_buffer[3]=0x01;
	cinterfacesmartcard.transmit_buffer[4]=0x01;
	cinterfacesmartcard.transmit_buffer[5]=0x01;
	cinterfacesmartcard.transmit_buffer[6]=0x01;
	cinterfacesmartcard.transmit_buffer[7]=0x01;
	write_byte(&ccomanda,8,&cinterfacesmartcard, sim_number);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	cinterfacesmartcard.transmit_buffer[0]=0x06;
	write_byte(&ccomanda,1,&cinterfacesmartcard, sim_number);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[4];
	byt[2]=cinterfacesmartcard.reciver_buffer[5];
	byt[2]=cinterfacesmartcard.reciver_buffer[6];
	somo_test=*qwd_byt;
	return somo_test;
}

unsigned check_rom(char sim_number)
{
	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0x52; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00;

	write_byte(&ccomanda,4,&cinterfacesmartcard, sim_number);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	cinterfacesmartcard.transmit_buffer[0]=0x20;
	write_byte(&ccomanda,1,&cinterfacesmartcard, sim_number);
	while(cinterfacesmartcard.ok==0){} ///
	cinterfacesmartcard.ok=0;


	cinterfacesmartcard.transmit_buffer[0]=0x00;
	cinterfacesmartcard.transmit_buffer[1]=0x00;
	cinterfacesmartcard.transmit_buffer[2]=0x00;
	cinterfacesmartcard.transmit_buffer[3]=0x11;
	cinterfacesmartcard.transmit_buffer[4]=0x11;
	cinterfacesmartcard.transmit_buffer[5]=0x11;
	cinterfacesmartcard.transmit_buffer[6]=0x11;
	cinterfacesmartcard.transmit_buffer[7]=0x00;
	cinterfacesmartcard.transmit_buffer[8]=0x00;
	cinterfacesmartcard.transmit_buffer[9]=0x00;
	cinterfacesmartcard.transmit_buffer[10]=0x00;
	cinterfacesmartcard.transmit_buffer[11]=0x00;
	cinterfacesmartcard.transmit_buffer[12]=0x00;
	cinterfacesmartcard.transmit_buffer[13]=0x00;
	cinterfacesmartcard.transmit_buffer[14]=0x00;
	cinterfacesmartcard.transmit_buffer[15]=0x00;
	cinterfacesmartcard.transmit_buffer[16]=0x00;
	cinterfacesmartcard.transmit_buffer[17]=0x00;
	cinterfacesmartcard.transmit_buffer[18]=0x00;
	cinterfacesmartcard.transmit_buffer[19]=0x00;
	cinterfacesmartcard.transmit_buffer[20]=0x00;
	cinterfacesmartcard.transmit_buffer[21]=0x00;
	cinterfacesmartcard.transmit_buffer[22]=0x00;
	cinterfacesmartcard.transmit_buffer[23]=0x00;
	cinterfacesmartcard.transmit_buffer[24]=0x00;
	cinterfacesmartcard.transmit_buffer[25]=0x00;
	cinterfacesmartcard.transmit_buffer[26]=0x00;
	cinterfacesmartcard.transmit_buffer[27]=0x00;
	cinterfacesmartcard.transmit_buffer[28]=0x00;
	cinterfacesmartcard.transmit_buffer[29]=0x00;
	cinterfacesmartcard.transmit_buffer[30]=0x00;
	cinterfacesmartcard.transmit_buffer[31]=0x00;

	write_byte(&ccomanda,32,&cinterfacesmartcard, sim_number);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	cinterfacesmartcard.transmit_buffer[0]=0x04;
	write_byte(&ccomanda,1,&cinterfacesmartcard, sim_number);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	byt[3]=0; //
	somo_test=*qwd_byt;
	return somo_test;
}


/*
unsigned test_result()// функция запроса теста системы
{
	unsigned somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0x38; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
	cinterfacesmartcard.transmit_buffer[4]=0x03; //менты
	write_byte(&ccomanda,5,&cinterfacesmartcard);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;
	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	somo_test=*qwd_byt;
	return somo_test;
}

unsigned get_challenge()
{
	int somo_test;
		Ccomanda ccomanda;
		char byt[4];
		unsigned *qwd_byt;
		qwd_byt=(unsigned*)(byt);
		cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
		cinterfacesmartcard.transmit_buffer[1]=0x84; //передаем номер инстртукции
		cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
		cinterfacesmartcard.transmit_buffer[3]=0x00; //
		cinterfacesmartcard.transmit_buffer[4]=0x10; //
		write_byte(&ccomanda,5,&cinterfacesmartcard);
		while(cinterfacesmartcard.ok==0){}
		cinterfacesmartcard.ok=0;
		byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
		byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
		byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
		byt[3]=0; //
		somo_test=*qwd_byt;
		return somo_test;
}



/*
unsigned check_rom()
{
	int somo_test;
		Ccomanda ccomanda;
		char byt[4];
		unsigned *qwd_byt;
		qwd_byt=(unsigned*)(byt);
		cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
		cinterfacesmartcard.transmit_buffer[1]=0x52; //передаем номер инстртукции
		cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
		cinterfacesmartcard.transmit_buffer[3]=0x00;
		cinterfacesmartcard.transmit_buffer[4]=0x20;

		write_byte(&ccomanda,5,&cinterfacesmartcard);
		while(cinterfacesmartcard.ok==0){}
		cinterfacesmartcard.ok=0;

		cinterfacesmartcard.transmit_buffer[0]=0x00;
		cinterfacesmartcard.transmit_buffer[1]=0x00;
		cinterfacesmartcard.transmit_buffer[2]=0x00;
		cinterfacesmartcard.transmit_buffer[3]=0x11;
		cinterfacesmartcard.transmit_buffer[4]=0x11;
		cinterfacesmartcard.transmit_buffer[5]=0x11;
		cinterfacesmartcard.transmit_buffer[6]=0x11;
		cinterfacesmartcard.transmit_buffer[7]=0x00;

		write_byte(&ccomanda,8,&cinterfacesmartcard);
				while(cinterfacesmartcard.ok==0){}
				cinterfacesmartcard.ok=0;

		cinterfacesmartcard.transmit_buffer[0]=0x00;
		cinterfacesmartcard.transmit_buffer[1]=0x00;
		cinterfacesmartcard.transmit_buffer[2]=0x00;
		cinterfacesmartcard.transmit_buffer[3]=0x00;
		cinterfacesmartcard.transmit_buffer[4]=0x00;
		cinterfacesmartcard.transmit_buffer[5]=0x00;
		cinterfacesmartcard.transmit_buffer[6]=0x00;
		cinterfacesmartcard.transmit_buffer[7]=0x00;


		cinterfacesmartcard.transmit_buffer[8]=0x00;
		cinterfacesmartcard.transmit_buffer[9]=0x00;
		cinterfacesmartcard.transmit_buffer[10]=0x00;
		cinterfacesmartcard.transmit_buffer[11]=0x00;
		cinterfacesmartcard.transmit_buffer[12]=0x00;
		cinterfacesmartcard.transmit_buffer[13]=0x00;
		cinterfacesmartcard.transmit_buffer[14]=0x00;
		cinterfacesmartcard.transmit_buffer[15]=0x00;


		cinterfacesmartcard.transmit_buffer[16]=0x00;
		cinterfacesmartcard.transmit_buffer[17]=0x00;
		cinterfacesmartcard.transmit_buffer[18]=0x00;
		cinterfacesmartcard.transmit_buffer[19]=0x00;
		cinterfacesmartcard.transmit_buffer[20]=0x00;
		cinterfacesmartcard.transmit_buffer[21]=0x00;
		cinterfacesmartcard.transmit_buffer[22]=0x00;
		cinterfacesmartcard.transmit_buffer[23]=0x00;

		write_byte(&ccomanda,24,&cinterfacesmartcard);
				while(cinterfacesmartcard.ok==0){}
				cinterfacesmartcard.ok=0;

		cinterfacesmartcard.transmit_buffer[0]=0x04;

		write_byte(&ccomanda,1,&cinterfacesmartcard);
		while(cinterfacesmartcard.ok==0){}
		cinterfacesmartcard.ok=0;

		cinterfacesmartcard.transmit_buffer[0]=0x04;

			write_byte(&ccomanda,1,&cinterfacesmartcard);
			while(cinterfacesmartcard.ok==0){}
			cinterfacesmartcard.ok=0;

			cinterfacesmartcard.transmit_buffer[0]=0x04;

				write_byte(&ccomanda,1,&cinterfacesmartcard);
				while(cinterfacesmartcard.ok==0){}
				cinterfacesmartcard.ok=0;

		byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
		byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
		byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
		byt[3]=0; //
		somo_test=*qwd_byt;
		return somo_test;
}
*/
/*
unsigned write_tk_pl()
{

	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0xFF; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0x3A; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
	cinterfacesmartcard.transmit_buffer[4]=0x08; //менты
    cinterfacesmartcard.transmit_buffer[5]=0x00;
	cinterfacesmartcard.transmit_buffer[6]=0x00;
	cinterfacesmartcard.transmit_buffer[7]=0x00;
	cinterfacesmartcard.transmit_buffer[8]=0x00;
	cinterfacesmartcard.transmit_buffer[9]=0x00;
	cinterfacesmartcard.transmit_buffer[10]=0x00;
	cinterfacesmartcard.transmit_buffer[11]=0x00;
	cinterfacesmartcard.transmit_buffer[12]=0x00;
	write_byte(&ccomanda,13,&cinterfacesmartcard);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;
	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	byt[3]=0; //
	somo_test=*qwd_byt;
	return somo_test;
}

unsigned create_mf()
{
	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0x30; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
	cinterfacesmartcard.transmit_buffer[4]=0x09; //менты
	write_byte(&ccomanda,5,&cinterfacesmartcard);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	cinterfacesmartcard.transmit_buffer[0]=0x00;
	write_byte(&ccomanda,1,&cinterfacesmartcard);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;
	cinterfacesmartcard.transmit_buffer[0]=0x00;
	cinterfacesmartcard.transmit_buffer[1]=0x00;
	cinterfacesmartcard.transmit_buffer[2]=0x00;
	cinterfacesmartcard.transmit_buffer[3]=0x00;
	cinterfacesmartcard.transmit_buffer[4]=0x00;
	cinterfacesmartcard.transmit_buffer[5]=0x00;
	cinterfacesmartcard.transmit_buffer[6]=0x00;
	cinterfacesmartcard.transmit_buffer[7]=0x00;
	write_byte(&ccomanda,8,&cinterfacesmartcard);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	byt[3]=0; //
	somo_test=*qwd_byt;
	return somo_test;
}

unsigned get_response()
{
	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0xC0; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
	cinterfacesmartcard.transmit_buffer[4]=0xFA; //менты

	write_byte(&ccomanda,5,&cinterfacesmartcard);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;
	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	byt[3]=0; //
	somo_test=*qwd_byt;
	return somo_test;
}
unsigned write_tk()
{
	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0x36; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
	cinterfacesmartcard.transmit_buffer[4]=0x08; //менты
	write_byte(&ccomanda,5,&cinterfacesmartcard);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;
	cinterfacesmartcard.transmit_buffer[0]=0xab;//0xAB;
	cinterfacesmartcard.transmit_buffer[1]=0x49;//0x49;
	cinterfacesmartcard.transmit_buffer[2]=0xb8;//0xB8;
	cinterfacesmartcard.transmit_buffer[3]=0xf7;//0xF7;
	cinterfacesmartcard.transmit_buffer[4]=0xab;//0xAB;
	cinterfacesmartcard.transmit_buffer[5]=0x49;//0x49;
	cinterfacesmartcard.transmit_buffer[6]=0xb8;//0xB8;
	cinterfacesmartcard.transmit_buffer[7]=0xf7;//0xF7;
	write_byte(&ccomanda,8,&cinterfacesmartcard);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;
	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	byt[3]=0; //
	somo_test=*qwd_byt;
	return somo_test;
}

unsigned verify_tk(unsigned tk_1, unsigned tk_2, unsigned tk_3, unsigned tk_4, unsigned tk_5, unsigned tk_6, unsigned tk_7, unsigned tk_8)
{
	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0x3E; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
	cinterfacesmartcard.transmit_buffer[4]=0x08; //менты
	write_byte(&ccomanda,5,&cinterfacesmartcard);
	while(cinterfacesmartcard.ok==0){}
    cinterfacesmartcard.ok=0;
	cinterfacesmartcard.transmit_buffer[0]=tk_1;
	cinterfacesmartcard.transmit_buffer[1]=tk_2;
	cinterfacesmartcard.transmit_buffer[2]=tk_3;
	cinterfacesmartcard.transmit_buffer[3]=tk_4;
	cinterfacesmartcard.transmit_buffer[4]=tk_5;
	cinterfacesmartcard.transmit_buffer[5]=tk_6;
	cinterfacesmartcard.transmit_buffer[6]=tk_7;
	cinterfacesmartcard.transmit_buffer[7]=tk_8;
	write_byte(&ccomanda,8,&cinterfacesmartcard);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;
	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	byt[3]=0; //
	somo_test=*qwd_byt;
	return somo_test;
}
*/
void SetSmartCart()
{
	int status;
	Ccomanda ccomanda;
	status=Xil_In32(baseaddress+0x238);// тип прерывания
	if(status==1)//приёмник
	{
			cinterfacesmartcard.reciver_buffer[cinterfacesmartcard.index_rec_buff]=Xil_In32(XPAR_HEAD_IP_0_BASEADDR+0x208);
			Xil_Out32(XPAR_HEAD_IP_0_BASEADDR+0x100, 4101);
		    Xil_Out32(XPAR_HEAD_IP_0_BASEADDR+0x100, 131077);
			invert_byte(&cinterfacesmartcard.reciver_buffer[cinterfacesmartcard.index_rec_buff]);
			cinterfacesmartcard.index_rec_buff++;
	}
	if(status==2)//передатчик
	{
		Xil_Out32(baseaddress+0x100, 4101);
		Xil_Out32(XPAR_HEAD_IP_0_BASEADDR+0x100, 131077);
		return;
	}
	if(status==3)// окончание приёма, сброс
	{
		Xil_Out32(XPAR_HEAD_IP_0_BASEADDR+0x100, 4101);
		Xil_Out32(baseaddress+0x228,50000000);// установка ожидание окончания 1 сек
		cinterfacesmartcard.number_read_byte=cinterfacesmartcard.index_rec_buff;
		cinterfacesmartcard.index_rec_buff=0;
		cinterfacesmartcard.initcil=0;
		cinterfacesmartcard.ok=1;
		return;
	}

}

void SetSmartCart_1()
{
	int status;
	Ccomanda ccomanda;
	status=Xil_In32(baseaddress_smoll_card+0x238);// тип прерывания
	if(status==1)//приёмник
	{
			cinterfacesmartcard.reciver_buffer[cinterfacesmartcard.index_rec_buff]=Xil_In32(XPAR_HEAD_IP_1_BASEADDR+0x208);
			Xil_Out32(XPAR_HEAD_IP_1_BASEADDR+0x100, 4101);
		    Xil_Out32(XPAR_HEAD_IP_1_BASEADDR+0x100, 131077);
			invert_byte(&cinterfacesmartcard.reciver_buffer[cinterfacesmartcard.index_rec_buff]);
			cinterfacesmartcard.index_rec_buff++;
	}
	if(status==2)//передатчик
	{
		Xil_Out32(baseaddress_smoll_card+0x100, 4101);
		Xil_Out32(XPAR_HEAD_IP_1_BASEADDR+0x100, 131077);
		return;
	}
	if(status==3)// окончание приёма, сброс
	{
		Xil_Out32(XPAR_HEAD_IP_1_BASEADDR+0x100, 4101);
		Xil_Out32(baseaddress_smoll_card+0x228,50000000);// установка ожидание окончания 1 сек
		cinterfacesmartcard.number_read_byte=cinterfacesmartcard.index_rec_buff;
		cinterfacesmartcard.index_rec_buff=0;
		cinterfacesmartcard.initcil=0;
		cinterfacesmartcard.ok=1;
		return;
	}

}
/*
unsigned testFS()
{
	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0xF0; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
	cinterfacesmartcard.transmit_buffer[4]=0x04; //менты
	write_byte(&ccomanda,5,&cinterfacesmartcard);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;
	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	byt[3]=0; //
	somo_test=*qwd_byt;
	return somo_test;
}
/*
unsigned create_df()
{
	int somo_test;
	Ccomanda ccomanda;
	char byt[4];
	unsigned *qwd_byt;
	qwd_byt=(unsigned*)(byt);
	cinterfacesmartcard.transmit_buffer[0]=0x80; //передаем класс команды
	cinterfacesmartcard.transmit_buffer[1]=0x32; //передаем номер инстртукции
	cinterfacesmartcard.transmit_buffer[2]=0x00; //ар
	cinterfacesmartcard.transmit_buffer[3]=0x00; //гу
	cinterfacesmartcard.transmit_buffer[4]=0x0B; //менты
	write_byte(&ccomanda,5,&cinterfacesmartcard);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	//идентификатор файла
	cinterfacesmartcard.transmit_buffer[0]=0x77;
	cinterfacesmartcard.transmit_buffer[1]=0x77;
	write_byte(&ccomanda,2,&cinterfacesmartcard);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	//статус файла
	cinterfacesmartcard.transmit_buffer[0]=0x00;
	write_byte(&ccomanda,1,&cinterfacesmartcard);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	//условия доступа
	cinterfacesmartcard.transmit_buffer[0]=0x00;
	cinterfacesmartcard.transmit_buffer[1]=0x00;
	cinterfacesmartcard.transmit_buffer[2]=0x00;
	cinterfacesmartcard.transmit_buffer[3]=0x00;
	cinterfacesmartcard.transmit_buffer[4]=0x00;
	cinterfacesmartcard.transmit_buffer[5]=0x00;
	cinterfacesmartcard.transmit_buffer[6]=0x00;
	cinterfacesmartcard.transmit_buffer[7]=0x00;
	write_byte(&ccomanda,8,&cinterfacesmartcard);
	while(cinterfacesmartcard.ok==0){}
	cinterfacesmartcard.ok=0;

	byt[0]=cinterfacesmartcard.reciver_buffer[1]; //
	byt[1]=cinterfacesmartcard.reciver_buffer[2]; //
	byt[2]=cinterfacesmartcard.reciver_buffer[3]; //
	byt[3]=0; //
	somo_test=*qwd_byt;
	return somo_test;
}
*/
void DetectSmartCart()
{
	int status;
	status=Xil_In32(0x43C00008);
	Xil_Out32(0x43C00004,1);
	Xil_Out32(0x43C00004,0);
}


int SetUpInterruptSystem(XScuGic *XScuGicInstancePtr) //инициализация контроллера прерываний
{
	Xil_ExceptionRegisterHandler(XIL_EXCEPTION_ID_INT,
	(Xil_ExceptionHandler) XScuGic_InterruptHandler,
	XScuGicInstancePtr);
	Xil_ExceptionEnable();
	return XST_SUCCESS;
}


int ScuGicInterrupt_Init(u16 DeviceId,ProgSmartCart *pProgSmartCart, ProgSmartCart_1 *pProgSmartCart_1) //функция инициализации прерывания № 61
{
	int Status;
	XScuGic_Config *GicConfig;
	GicConfig = XScuGic_LookupConfig(DeviceId);
	if (NULL == GicConfig) {
	return XST_FAILURE;
	}
	Status = XScuGic_CfgInitialize(&InterruptController, GicConfig, GicConfig->CpuBaseAddress);
	if (Status != XST_SUCCESS) {
	return XST_FAILURE;
	}
	Status = SetUpInterruptSystem(&InterruptController);
	if (Status != XST_SUCCESS) {
	return XST_FAILURE;
	}
	//---схема управления
	Status = XScuGic_Connect(&InterruptController,61,SetSmartCart,pProgSmartCart);
	if (Status != XST_SUCCESS)
	{
		return XST_FAILURE;
	}
	XScuGic_Enable(&InterruptController, 61);


	Status = XScuGic_Connect(&InterruptController,63,SetSmartCart_1,pProgSmartCart_1);
    if (Status != XST_SUCCESS)
	{
		return XST_FAILURE;
	}
	XScuGic_Enable(&InterruptController, 63);


 	return XST_SUCCESS;


}
