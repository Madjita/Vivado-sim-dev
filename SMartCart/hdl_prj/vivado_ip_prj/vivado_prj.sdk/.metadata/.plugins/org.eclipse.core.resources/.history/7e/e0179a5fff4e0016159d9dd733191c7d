#include "type_data.h"
#include "xil_io.h"
#include "xparameters.h"

void CleancInfoSmartcard(cInfoSmartcard *pcInfoSmartcard)
{
    int i;
    pcInfoSmartcard->TS=0;
    pcInfoSmartcard->T0=0;
    for(i=0;i<16;i++)
    {
        pcInfoSmartcard->TA[i]=0;
        pcInfoSmartcard->EN_TA[i]=0;
        pcInfoSmartcard->TB[i]=0;
        pcInfoSmartcard->EN_TB[i]=0;
        pcInfoSmartcard->TC[i]=0;
        pcInfoSmartcard->EN_TC[i]=0;
        pcInfoSmartcard->TD[i]=0;
        pcInfoSmartcard->EN_TD[i]=0;
        pcInfoSmartcard->protocol[i]=0;
        pcInfoSmartcard->T[i]=0;
    }
     pcInfoSmartcard->TCK=0;
     pcInfoSmartcard->EN_TCK=0;
}


void start(Ccomanda *pCcomanda)
{
    int comanda;
    pCcomanda->start=1;
    pCcomanda->stop=0;
    pCcomanda->rd_wr=1;
    pCcomanda->step=0;
    pCcomanda->irq_rst=0;
    pCcomanda->number_wr_byte=0;
    pCcomanda->on_transmite=0;
    pCcomanda->on_reciver=1;
    comanda=(pCcomanda->start<<0)|(pCcomanda->stop<<1)|(pCcomanda->rd_wr<<2)|(pCcomanda->step<<3)|(pCcomanda->irq_rst<<12)|(pCcomanda->number_wr_byte<<13)|(pCcomanda->on_transmite<<16)|(pCcomanda->on_reciver<<17);
    Xil_Out32(XPAR_HEAD_IP_0_BASEADDR+0x100,comanda);
}
void write_byte(Ccomanda *pCcomanda,char Number_write)
{
    int comanda;
    pCcomanda->start=1;
    pCcomanda->stop=0;
    pCcomanda->rd_wr=1;
    pCcomanda->step=0;
    pCcomanda->irq_rst=0;
    pCcomanda->number_wr_byte=Number_write-1;
    pCcomanda->on_transmite=0;
    pCcomanda->on_reciver=1;
    comanda=(pCcomanda->start<<0)|(pCcomanda->stop<<1)|(pCcomanda->rd_wr<<2)|(pCcomanda->step<<3)|(pCcomanda->irq_rst<<12)|(pCcomanda->number_wr_byte<<13)|(pCcomanda->on_transmite<<16)|(pCcomanda->on_reciver<<17);
    Xil_Out32(XPAR_HEAD_IP_0_BASEADDR+0x100,comanda);
}

void InicialSmartCard(cInfoSmartcard *pcInfoSmartcard)
{
    Ccomanda ccomanda;
    int n=0;
    int p=0;
    int i=0;
    int m=0;
    char ex=0;
    start(&ccomanda);
    while(ex==0)
    {
        while(ok==0){}
        switch (n) {

            case 0:
                pcInfoSmartcard->TS=Xil_In32(XPAR_HEAD_IP_0_BASEADDR+0x104);
                ok=0;
                n=1;
                write_byte(&ccomanda,1);
            break;

            case 1:
                m++;
                pcInfoSmartcard->TD[m-1]=Xil_In32(XPAR_HEAD_IP_0_BASEADDR+0x104);
                ok=0;
                pcInfoSmartcard->protocol[m-1]=(pcInfoSmartcard->TD[m-1])&(0x0f);

                if(pcInfoSmartcard->TD[m-1]&0x10==0x10)
                {
                   pcInfoSmartcard->EN_TA[m-1]=1;
                   n=2;
                   p=1;
                }

                if((pcInfoSmartcard->TD[m-1]&0x20==0x20)&(p==0))
                {
                   pcInfoSmartcard->EN_TB[m-1]=1;
                   n=3;
                   p=1;
                }

                if((pcInfoSmartcard->TD[m-1]&0x40==0x40)&(p==0))
                {
                   pcInfoSmartcard->EN_TC[m-1]=1;
                   n=4;
                   p=1;
                }

                if((pcInfoSmartcard->TD[m-1]&0x80==0x80)&(p==0))
                {
                   pcInfoSmartcard->EN_TD[m]=1;
                   n=1;
                   p=1;
                }

                if((pcInfoSmartcard->TD[m-1]&0xF0==0x00)&(p==0))
                {
                   n=14;
                   p=1;
                }

                write_byte(&ccomanda,1);

            break;
               case 2:

                  pcInfoSmartcard->TA[m-1]=Xil_In32(XPAR_HEAD_IP_0_BASEADDR+0x104);
                  ok=0;
                  p=0;
                  if((pcInfoSmartcard->TD[m-1]&0x20==0x20)&(p==0))
                  {
                     pcInfoSmartcard->EN_TB[m-1]=1;
                     n=3;
                     p=1;
                  }
                  if((pcInfoSmartcard->TD[m-1]&0x40==0x40)&(p==0))
                  {
                     pcInfoSmartcard->EN_TC[m-1]=1;
                     n=4;
                     p=1;
                  }
                  if((pcInfoSmartcard->TD[m-1]&0x80==0x80)&(p==0))
                  {
                     pcInfoSmartcard->EN_TD[m]=1;
                     n=1;
                     p=1;
                  }
                  if(p==0)
                  {
                      n=14;
                  }
                  write_byte(&ccomanda,1);

               break;

              case 3:
                    pcInfoSmartcard->TB[m-1]=Xil_In32(XPAR_HEAD_IP_0_BASEADDR+0x104);
                    ok=0;
                    p=0;
                    if((pcInfoSmartcard->TD[m-1]&0x40==0x40)&(p==0))
                    {
                       pcInfoSmartcard->EN_TC[m-1]=1;
                       n=4;
                       p=1;
                    }
                    if((pcInfoSmartcard->TD[m-1]&0x80==0x80)&(p==0))
                    {
                       pcInfoSmartcard->EN_TD[m]=1;
                       n=1;
                       p=1;
                    }
                    if(p==0)
                    {
                        n=14;
                    }
                    write_byte(&ccomanda,1);
              break;
              case 4:
                    pcInfoSmartcard->TC[m-1]=Xil_In32(XPAR_HEAD_IP_0_BASEADDR+0x104);
                    ok=0;
                    p=0;
                    if((pcInfoSmartcard->TD[m-1]&0x80==0x80)&(p==0))
                    {
                       pcInfoSmartcard->EN_TD[m]=1;
                       n=1;
                       p=1;
                    }
                    if(p==0)
                    {
                        n=14;
                    }
                    write_byte(&ccomanda,1);
              break;
            case 14:
                  if(i!=pcInfoSmartcard->protocol[0])
                   {
                        i++;
                        pcInfoSmartcard->T[i]=Xil_In32(XPAR_HEAD_IP_0_BASEADDR+0x104);
                        write_byte(&ccomanda,1);
                   }
                   else
                   {
                        if((pcInfoSmartcard->protocol[1]==0)&(pcInfoSmartcard->protocol[2]==0))
                        {
                            ex=1;
                        }
                        else
                        {
                            n=15;
                            pcInfoSmartcard->EN_TCK=1;
                            write_byte(&ccomanda,1);
                        }
             }
          break;
          case 15:
             pcInfoSmartcard->TCK=Xil_In32(XPAR_HEAD_IP_0_BASEADDR+0x104);
             ex=1;
          break;
        default:
            break;
        }
    }
}


void invert_byte(int *a)
{
	int i;
	int b,c;
	char xt;
	c=*a;

	b=0;
	for(i=0;i<8;i++)
	{
		xt=c&((128>>i)&0xFF);
		xt=xt<<(i+1);
		b=b+xt;
	}
	*a=b;
}
