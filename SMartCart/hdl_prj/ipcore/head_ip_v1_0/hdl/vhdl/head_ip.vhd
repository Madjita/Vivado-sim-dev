-- -------------------------------------------------------------
-- 
-- File Name: D:\direct_ip\smart_ip\hdlsrc\smartCart5_1work\head_ip.vhd
-- Created: 2017-11-07 14:25:02
-- 
-- Generated by MATLAB 9.0 and HDL Coder 3.8
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: -1
-- Target subsystem base rate: -1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: head_ip
-- Source Path: head_ip
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY head_ip IS
  PORT( IPCORE_CLK                        :   IN    std_logic;  -- ufix1
        IPCORE_RESETN                     :   IN    std_logic;  -- ufix1
        IO                                :   IN    std_logic;  -- ufix1
        AXI4_Lite_ACLK                    :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARESETN                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_AWADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_AWVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_WDATA                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_WSTRB                   :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_Lite_WVALID                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_BREADY                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_ARVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_RREADY                  :   IN    std_logic;  -- ufix1
        signals                           :   OUT   std_logic_vector(2 DOWNTO 0);  -- ufix3
        I0_OUT                            :   OUT   std_logic;  -- ufix1
        strob                             :   OUT   std_logic;  -- ufix1
        irq                               :   OUT   std_logic;  -- ufix1
        trans_io                          :   OUT   std_logic;  -- ufix1
        switch_io                         :   OUT   std_logic;  -- ufix1
        AXI4_Lite_AWREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_WREADY                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_BRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_BVALID                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_ARREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_RDATA                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_RRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_RVALID                  :   OUT   std_logic  -- ufix1
        );
END head_ip;


ARCHITECTURE rtl OF head_ip IS

  -- Component Declarations
  COMPONENT head_ip_axi_lite
    PORT( reset                           :   IN    std_logic;
          AXI4_Lite_ACLK                  :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARESETN               :   IN    std_logic;  -- ufix1
          AXI4_Lite_AWADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_AWVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_WDATA                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_WSTRB                 :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_Lite_WVALID                :   IN    std_logic;  -- ufix1
          AXI4_Lite_BREADY                :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_ARVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_RREADY                :   IN    std_logic;  -- ufix1
          read_Out1                       :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          read_Out2                       :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          read_Out3                       :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          read_Out4                       :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          read_Out5                       :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          read_Out6                       :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          read_Out7                       :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          read_Out8                       :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          read_status                     :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_AWREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_WREADY                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_BRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_BVALID                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_ARREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_RDATA                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_RRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_RVALID                :   OUT   std_logic;  -- ufix1
          write_axi_enable                :   OUT   std_logic;  -- ufix1
          write_comanda                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_1                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_2                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_3                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_4                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_5                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_6                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_7                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_8                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_9                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_10                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_11                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_12                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_13                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_14                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_15                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_16                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_17                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_18                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_19                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_20                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_21                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_22                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_23                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_24                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_25                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_26                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_27                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_28                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_29                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_30                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_31                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_32                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_33                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_34                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_35                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_36                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_37                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_38                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_39                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_40                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_41                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_42                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_43                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_44                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_45                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_46                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_47                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_48                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_49                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_50                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_51                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_52                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_53                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_54                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_55                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_56                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_57                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_58                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_59                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_60                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_61                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_62                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_63                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_data_in_64                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Time_transition           :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Time_pause                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Time_reciv                :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Time_transmit             :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          write_Time_interval             :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          reset_internal                  :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  COMPONENT head_ip_dut
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;
          dut_enable                      :   IN    std_logic;  -- ufix1
          comanda                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          IO                              :   IN    std_logic;  -- ufix1
          data_in_1                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_2                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_3                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_4                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_5                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_6                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_7                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_8                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_9                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_10                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_11                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_12                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_13                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_14                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_15                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_16                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_17                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_18                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_19                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_20                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_21                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_22                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_23                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_24                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_25                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_26                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_27                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_28                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_29                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_30                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_31                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_32                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_33                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_34                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_35                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_36                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_37                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_38                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_39                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_40                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_41                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_42                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_43                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_44                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_45                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_46                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_47                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_48                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_49                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_50                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_51                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_52                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_53                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_54                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_55                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_56                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_57                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_58                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_59                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_60                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_61                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_62                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_63                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          data_in_64                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Time_pause                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Time_reciv                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Time_transmit                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Time_interval                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Time_transition                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          ce_out                          :   OUT   std_logic;  -- ufix1
          signals                         :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          I0_OUT                          :   OUT   std_logic;  -- ufix1
          strob                           :   OUT   std_logic;  -- ufix1
          Out1                            :   OUT   std_logic_vector(7 DOWNTO 0);  -- ufix8
          Out2                            :   OUT   std_logic_vector(7 DOWNTO 0);  -- ufix8
          Out3                            :   OUT   std_logic_vector(7 DOWNTO 0);  -- ufix8
          Out4                            :   OUT   std_logic_vector(7 DOWNTO 0);  -- ufix8
          Out5                            :   OUT   std_logic_vector(7 DOWNTO 0);  -- ufix8
          Out6                            :   OUT   std_logic_vector(7 DOWNTO 0);  -- ufix8
          Out7                            :   OUT   std_logic_vector(7 DOWNTO 0);  -- ufix8
          Out8                            :   OUT   std_logic_vector(7 DOWNTO 0);  -- ufix8
          irq                             :   OUT   std_logic;  -- ufix1
          status                          :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          trans_io                        :   OUT   std_logic;  -- ufix1
          switch_io                       :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : head_ip_axi_lite
    USE ENTITY work.head_ip_axi_lite(rtl);

  FOR ALL : head_ip_dut
    USE ENTITY work.head_ip_dut(rtl);

  -- Signals
  SIGNAL reset                            : std_logic;
  SIGNAL reset_cm                         : std_logic;  -- ufix1
  SIGNAL reset_internal                   : std_logic;  -- ufix1
  SIGNAL Out1_sig                         : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL Out2_sig                         : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL Out3_sig                         : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL Out4_sig                         : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL Out5_sig                         : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL Out6_sig                         : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL Out7_sig                         : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL Out8_sig                         : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL status_sig                       : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_BRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL AXI4_Lite_RDATA_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_RRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL write_axi_enable                 : std_logic;  -- ufix1
  SIGNAL write_comanda                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_1                  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_2                  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_3                  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_4                  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_5                  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_6                  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_7                  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_8                  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_9                  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_10                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_11                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_12                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_13                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_14                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_15                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_16                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_17                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_18                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_19                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_20                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_21                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_22                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_23                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_24                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_25                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_26                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_27                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_28                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_29                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_30                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_31                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_32                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_33                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_34                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_35                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_36                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_37                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_38                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_39                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_40                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_41                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_42                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_43                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_44                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_45                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_46                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_47                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_48                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_49                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_50                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_51                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_52                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_53                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_54                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_55                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_56                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_57                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_58                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_59                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_60                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_61                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_62                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_63                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_data_in_64                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Time_transition            : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Time_pause                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Time_reciv                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Time_transmit              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL write_Time_interval              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL signals_sig                      : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL I0_OUT_sig                       : std_logic;  -- ufix1
  SIGNAL strob_sig                        : std_logic;  -- ufix1
  SIGNAL irq_sig                          : std_logic;  -- ufix1
  SIGNAL trans_io_sig                     : std_logic;  -- ufix1
  SIGNAL switch_io_sig                    : std_logic;  -- ufix1

BEGIN
  u_head_ip_axi_lite_inst : head_ip_axi_lite
    PORT MAP( reset => reset,
              AXI4_Lite_ACLK => AXI4_Lite_ACLK,  -- ufix1
              AXI4_Lite_ARESETN => AXI4_Lite_ARESETN,  -- ufix1
              AXI4_Lite_AWADDR => AXI4_Lite_AWADDR,  -- ufix16
              AXI4_Lite_AWVALID => AXI4_Lite_AWVALID,  -- ufix1
              AXI4_Lite_WDATA => AXI4_Lite_WDATA,  -- ufix32
              AXI4_Lite_WSTRB => AXI4_Lite_WSTRB,  -- ufix4
              AXI4_Lite_WVALID => AXI4_Lite_WVALID,  -- ufix1
              AXI4_Lite_BREADY => AXI4_Lite_BREADY,  -- ufix1
              AXI4_Lite_ARADDR => AXI4_Lite_ARADDR,  -- ufix16
              AXI4_Lite_ARVALID => AXI4_Lite_ARVALID,  -- ufix1
              AXI4_Lite_RREADY => AXI4_Lite_RREADY,  -- ufix1
              read_Out1 => Out1_sig,  -- ufix8
              read_Out2 => Out2_sig,  -- ufix8
              read_Out3 => Out3_sig,  -- ufix8
              read_Out4 => Out4_sig,  -- ufix8
              read_Out5 => Out5_sig,  -- ufix8
              read_Out6 => Out6_sig,  -- ufix8
              read_Out7 => Out7_sig,  -- ufix8
              read_Out8 => Out8_sig,  -- ufix8
              read_status => status_sig,  -- ufix32
              AXI4_Lite_AWREADY => AXI4_Lite_AWREADY,  -- ufix1
              AXI4_Lite_WREADY => AXI4_Lite_WREADY,  -- ufix1
              AXI4_Lite_BRESP => AXI4_Lite_BRESP_tmp,  -- ufix2
              AXI4_Lite_BVALID => AXI4_Lite_BVALID,  -- ufix1
              AXI4_Lite_ARREADY => AXI4_Lite_ARREADY,  -- ufix1
              AXI4_Lite_RDATA => AXI4_Lite_RDATA_tmp,  -- ufix32
              AXI4_Lite_RRESP => AXI4_Lite_RRESP_tmp,  -- ufix2
              AXI4_Lite_RVALID => AXI4_Lite_RVALID,  -- ufix1
              write_axi_enable => write_axi_enable,  -- ufix1
              write_comanda => write_comanda,  -- ufix32
              write_data_in_1 => write_data_in_1,  -- ufix32
              write_data_in_2 => write_data_in_2,  -- ufix32
              write_data_in_3 => write_data_in_3,  -- ufix32
              write_data_in_4 => write_data_in_4,  -- ufix32
              write_data_in_5 => write_data_in_5,  -- ufix32
              write_data_in_6 => write_data_in_6,  -- ufix32
              write_data_in_7 => write_data_in_7,  -- ufix32
              write_data_in_8 => write_data_in_8,  -- ufix32
              write_data_in_9 => write_data_in_9,  -- ufix32
              write_data_in_10 => write_data_in_10,  -- ufix32
              write_data_in_11 => write_data_in_11,  -- ufix32
              write_data_in_12 => write_data_in_12,  -- ufix32
              write_data_in_13 => write_data_in_13,  -- ufix32
              write_data_in_14 => write_data_in_14,  -- ufix32
              write_data_in_15 => write_data_in_15,  -- ufix32
              write_data_in_16 => write_data_in_16,  -- ufix32
              write_data_in_17 => write_data_in_17,  -- ufix32
              write_data_in_18 => write_data_in_18,  -- ufix32
              write_data_in_19 => write_data_in_19,  -- ufix32
              write_data_in_20 => write_data_in_20,  -- ufix32
              write_data_in_21 => write_data_in_21,  -- ufix32
              write_data_in_22 => write_data_in_22,  -- ufix32
              write_data_in_23 => write_data_in_23,  -- ufix32
              write_data_in_24 => write_data_in_24,  -- ufix32
              write_data_in_25 => write_data_in_25,  -- ufix32
              write_data_in_26 => write_data_in_26,  -- ufix32
              write_data_in_27 => write_data_in_27,  -- ufix32
              write_data_in_28 => write_data_in_28,  -- ufix32
              write_data_in_29 => write_data_in_29,  -- ufix32
              write_data_in_30 => write_data_in_30,  -- ufix32
              write_data_in_31 => write_data_in_31,  -- ufix32
              write_data_in_32 => write_data_in_32,  -- ufix32
              write_data_in_33 => write_data_in_33,  -- ufix32
              write_data_in_34 => write_data_in_34,  -- ufix32
              write_data_in_35 => write_data_in_35,  -- ufix32
              write_data_in_36 => write_data_in_36,  -- ufix32
              write_data_in_37 => write_data_in_37,  -- ufix32
              write_data_in_38 => write_data_in_38,  -- ufix32
              write_data_in_39 => write_data_in_39,  -- ufix32
              write_data_in_40 => write_data_in_40,  -- ufix32
              write_data_in_41 => write_data_in_41,  -- ufix32
              write_data_in_42 => write_data_in_42,  -- ufix32
              write_data_in_43 => write_data_in_43,  -- ufix32
              write_data_in_44 => write_data_in_44,  -- ufix32
              write_data_in_45 => write_data_in_45,  -- ufix32
              write_data_in_46 => write_data_in_46,  -- ufix32
              write_data_in_47 => write_data_in_47,  -- ufix32
              write_data_in_48 => write_data_in_48,  -- ufix32
              write_data_in_49 => write_data_in_49,  -- ufix32
              write_data_in_50 => write_data_in_50,  -- ufix32
              write_data_in_51 => write_data_in_51,  -- ufix32
              write_data_in_52 => write_data_in_52,  -- ufix32
              write_data_in_53 => write_data_in_53,  -- ufix32
              write_data_in_54 => write_data_in_54,  -- ufix32
              write_data_in_55 => write_data_in_55,  -- ufix32
              write_data_in_56 => write_data_in_56,  -- ufix32
              write_data_in_57 => write_data_in_57,  -- ufix32
              write_data_in_58 => write_data_in_58,  -- ufix32
              write_data_in_59 => write_data_in_59,  -- ufix32
              write_data_in_60 => write_data_in_60,  -- ufix32
              write_data_in_61 => write_data_in_61,  -- ufix32
              write_data_in_62 => write_data_in_62,  -- ufix32
              write_data_in_63 => write_data_in_63,  -- ufix32
              write_data_in_64 => write_data_in_64,  -- ufix32
              write_Time_transition => write_Time_transition,  -- ufix32
              write_Time_pause => write_Time_pause,  -- ufix32
              write_Time_reciv => write_Time_reciv,  -- ufix32
              write_Time_transmit => write_Time_transmit,  -- ufix32
              write_Time_interval => write_Time_interval,  -- ufix32
              reset_internal => reset_internal  -- ufix1
              );

  u_head_ip_dut_inst : head_ip_dut
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset => reset,
              dut_enable => write_axi_enable,  -- ufix1
              comanda => write_comanda,  -- ufix32
              IO => IO,  -- ufix1
              data_in_1 => write_data_in_1,  -- ufix32
              data_in_2 => write_data_in_2,  -- ufix32
              data_in_3 => write_data_in_3,  -- ufix32
              data_in_4 => write_data_in_4,  -- ufix32
              data_in_5 => write_data_in_5,  -- ufix32
              data_in_6 => write_data_in_6,  -- ufix32
              data_in_7 => write_data_in_7,  -- ufix32
              data_in_8 => write_data_in_8,  -- ufix32
              data_in_9 => write_data_in_9,  -- ufix32
              data_in_10 => write_data_in_10,  -- ufix32
              data_in_11 => write_data_in_11,  -- ufix32
              data_in_12 => write_data_in_12,  -- ufix32
              data_in_13 => write_data_in_13,  -- ufix32
              data_in_14 => write_data_in_14,  -- ufix32
              data_in_15 => write_data_in_15,  -- ufix32
              data_in_16 => write_data_in_16,  -- ufix32
              data_in_17 => write_data_in_17,  -- ufix32
              data_in_18 => write_data_in_18,  -- ufix32
              data_in_19 => write_data_in_19,  -- ufix32
              data_in_20 => write_data_in_20,  -- ufix32
              data_in_21 => write_data_in_21,  -- ufix32
              data_in_22 => write_data_in_22,  -- ufix32
              data_in_23 => write_data_in_23,  -- ufix32
              data_in_24 => write_data_in_24,  -- ufix32
              data_in_25 => write_data_in_25,  -- ufix32
              data_in_26 => write_data_in_26,  -- ufix32
              data_in_27 => write_data_in_27,  -- ufix32
              data_in_28 => write_data_in_28,  -- ufix32
              data_in_29 => write_data_in_29,  -- ufix32
              data_in_30 => write_data_in_30,  -- ufix32
              data_in_31 => write_data_in_31,  -- ufix32
              data_in_32 => write_data_in_32,  -- ufix32
              data_in_33 => write_data_in_33,  -- ufix32
              data_in_34 => write_data_in_34,  -- ufix32
              data_in_35 => write_data_in_35,  -- ufix32
              data_in_36 => write_data_in_36,  -- ufix32
              data_in_37 => write_data_in_37,  -- ufix32
              data_in_38 => write_data_in_38,  -- ufix32
              data_in_39 => write_data_in_39,  -- ufix32
              data_in_40 => write_data_in_40,  -- ufix32
              data_in_41 => write_data_in_41,  -- ufix32
              data_in_42 => write_data_in_42,  -- ufix32
              data_in_43 => write_data_in_43,  -- ufix32
              data_in_44 => write_data_in_44,  -- ufix32
              data_in_45 => write_data_in_45,  -- ufix32
              data_in_46 => write_data_in_46,  -- ufix32
              data_in_47 => write_data_in_47,  -- ufix32
              data_in_48 => write_data_in_48,  -- ufix32
              data_in_49 => write_data_in_49,  -- ufix32
              data_in_50 => write_data_in_50,  -- ufix32
              data_in_51 => write_data_in_51,  -- ufix32
              data_in_52 => write_data_in_52,  -- ufix32
              data_in_53 => write_data_in_53,  -- ufix32
              data_in_54 => write_data_in_54,  -- ufix32
              data_in_55 => write_data_in_55,  -- ufix32
              data_in_56 => write_data_in_56,  -- ufix32
              data_in_57 => write_data_in_57,  -- ufix32
              data_in_58 => write_data_in_58,  -- ufix32
              data_in_59 => write_data_in_59,  -- ufix32
              data_in_60 => write_data_in_60,  -- ufix32
              data_in_61 => write_data_in_61,  -- ufix32
              data_in_62 => write_data_in_62,  -- ufix32
              data_in_63 => write_data_in_63,  -- ufix32
              data_in_64 => write_data_in_64,  -- ufix32
              Time_pause => write_Time_pause,  -- ufix32
              Time_reciv => write_Time_reciv,  -- ufix32
              Time_transmit => write_Time_transmit,  -- ufix32
              Time_interval => write_Time_interval,  -- ufix32
              Time_transition => write_Time_transition,  -- ufix32
              ce_out => ce_out_sig,  -- ufix1
              signals => signals_sig,  -- sfix3
              I0_OUT => I0_OUT_sig,  -- ufix1
              strob => strob_sig,  -- ufix1
              Out1 => Out1_sig,  -- ufix8
              Out2 => Out2_sig,  -- ufix8
              Out3 => Out3_sig,  -- ufix8
              Out4 => Out4_sig,  -- ufix8
              Out5 => Out5_sig,  -- ufix8
              Out6 => Out6_sig,  -- ufix8
              Out7 => Out7_sig,  -- ufix8
              Out8 => Out8_sig,  -- ufix8
              irq => irq_sig,  -- ufix1
              status => status_sig,  -- ufix32
              trans_io => trans_io_sig,  -- ufix1
              switch_io => switch_io_sig  -- ufix1
              );

  reset_cm <=  NOT IPCORE_RESETN;

  reset <= reset_cm OR reset_internal;

  signals <= signals_sig;

  I0_OUT <= I0_OUT_sig;

  strob <= strob_sig;

  irq <= irq_sig;

  trans_io <= trans_io_sig;

  switch_io <= switch_io_sig;

  AXI4_Lite_BRESP <= AXI4_Lite_BRESP_tmp;

  AXI4_Lite_RDATA <= AXI4_Lite_RDATA_tmp;

  AXI4_Lite_RRESP <= AXI4_Lite_RRESP_tmp;

END rtl;

