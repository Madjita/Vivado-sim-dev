-- -------------------------------------------------------------
-- 
-- File Name: D:\direct_ip\smart_ip\hdlsrc\smartCart5_1work\head_ip_src_Swith_signal2.vhd
-- Created: 2017-11-07 14:24:49
-- 
-- Generated by MATLAB 9.0 and HDL Coder 3.8
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: head_ip_src_Swith_signal2
-- Source Path: smartCart5_1work/head/Interface/Swith_signal2
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY head_ip_src_Swith_signal2 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        Adr                               :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        Data                              :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        OutAddr                           :   OUT   std_logic_vector(7 DOWNTO 0)  -- uint8
        );
END head_ip_src_Swith_signal2;


ARCHITECTURE rtl OF head_ip_src_Swith_signal2 IS

  -- Signals
  SIGNAL Adr_unsigned                     : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Compare_To_Constant_out1         : std_logic;
  SIGNAL Data_unsigned                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL SA1_out1                         : unsigned(7 DOWNTO 0);  -- uint8

BEGIN
  Adr_unsigned <= unsigned(Adr);

  
  Compare_To_Constant_out1 <= '1' WHEN Adr_unsigned = to_unsigned(16#02#, 8) ELSE
      '0';

  Data_unsigned <= unsigned(Data);

  SA1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      SA1_out1 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Compare_To_Constant_out1 = '1' THEN
        SA1_out1 <= Data_unsigned;
      END IF;
    END IF;
  END PROCESS SA1_process;


  OutAddr <= std_logic_vector(SA1_out1);

END rtl;

